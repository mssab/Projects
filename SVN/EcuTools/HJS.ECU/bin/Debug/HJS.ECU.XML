<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HJS.ECU</name>
    </assembly>
    <members>
        <member name="T:HJS.AuthorBlock">
            <summary>Block of file author information</summary>
        </member>
        <member name="F:HJS.AuthorBlock.mCreationTime">
            <summary>Creation date</summary>
        </member>
        <member name="F:HJS.AuthorBlock.mComputername">
            <summary>Computer name</summary>
        </member>
        <member name="F:HJS.AuthorBlock.mUsername">
            <summary>User name</summary>
        </member>
        <member name="F:HJS.AuthorBlock.MAX_STRING_LENGTH">
            <summary>Maximum size of string in block data (without zero termination!)</summary>
        </member>
        <member name="M:HJS.AuthorBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.AuthorBlock.#ctor(HJS.Block)">
            <summary>Overloaded constructor</summary>
            <param name="b">Reference to author block in base class type</param>
        </member>
        <member name="M:HJS.AuthorBlock.Parse">
            <summary>Parse byte array</summary>
        </member>
        <member name="P:HJS.AuthorBlock.CreationTime">
            <summary>Accessors for creation date</summary>
        </member>
        <member name="P:HJS.AuthorBlock.Computername">
            <summary>Accessors for computer name</summary>
        </member>
        <member name="P:HJS.AuthorBlock.Username">
            <summary>Accessors for user name</summary>
        </member>
        <member name="M:HJS.AuthorBlock.Generate">
            <summary>Generate block data</summary>
        </member>
        <member name="T:HJS.BinaryCodedDecimals">
            <summary>Class for calculating binary coded decimals</summary>
        </member>
        <member name="M:HJS.BinaryCodedDecimals.ByteToBCD(System.Byte)">
            <summary>Convert decimal byte to BCD byte</summary>
            <param name="decimalByte">Decimal byte</param>
            <returns>BCD byte</returns>
        </member>
        <member name="M:HJS.BinaryCodedDecimals.BCDToByte(System.Byte)">
            <summary>Convert BCD byte to decimal byte</summary>
            <param name="binaryCodedDecimal">BCD byte</param>
            <returns>Decimal byte</returns>
        </member>
        <member name="T:HJS.Block">
            <summary>block object class</summary>
        </member>
        <member name="F:HJS.Block.BLOCK_HEADER_SIZE">
            <summary>Size of block header in bytes</summary>
            <see cref="T:HJS.Block.HeaderPosition">HeaderPosition</see>
        </member>
        <member name="F:HJS.Block.MAX_BLOCK_SIZE">
            <summary>Maximum amount of bytes for complete block</summary>
        </member>
        <member name="T:HJS.Block.VersionT">
            <summary>Version type structure</summary>
        </member>
        <member name="F:HJS.Block.VersionT.Hauptversion">
            <summary>Main version number</summary>
        </member>
        <member name="F:HJS.Block.VersionT.Nebenversion">
            <summary>Secondary version number</summary>
        </member>
        <member name="F:HJS.Block.VersionT.Revision">
            <summary>Revision or third version number</summary>
        </member>
        <member name="T:HJS.Block.BlockId">
            <summary>Enumeration of Identifiers for blocks</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdInvalid">
            <summary>Ivalid block identifier</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdNotKonfig">
            <summary>Emergency configuration</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdKonfig">
            <summary>Configuration</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdKennfld">
            <summary>Data map</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdDPD1">
            <summary>Drive pattern detection</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdDPD2">
            <summary>Drive pattern detection backup</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdValue1">
            <summary>Empirical values</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdValue2">
            <summary>Empirical values backup</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdVerhRing1">
            <summary>Behave ring part 1</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdVerhRing2">
            <summary>Behave ring part 2</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdVerhRing3">
            <summary>Behave ring part 3</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdReserve1">
            <summary>reserved identifier</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdReserve2">
            <summary>reserved identifier</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdReserve3">
            <summary>reserved identifier</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdProduction">
            <summary>Production data</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdReport">
            <summary>Construction kit report</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngDE">
            <summary>Language german</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngEN">
            <summary>Language english</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngFR">
            <summary>Language french</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngIT">
            <summary>Language italian</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngES">
            <summary>Language spanish</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngPL">
            <summary>Language polish</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngNL">
            <summary>Language dutch</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLngTK">
            <summary>Language turkish</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdInfoDig">
            <summary>Digital info block</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdInfoText">
            <summary>Info string</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdIstWerte">
            <summary>Actual values</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdFehlerStack">
            <summary>Error stack</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdRealTimeClock">
            <summary>Real time clock</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdParamBaukasten">
            <summary>Construction kit values</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdDeletion">
            <summary>Deleted block</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdLogging">
            <summary>Logging block</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdAuthor">
            <summary>author block</summary>
        </member>
        <member name="F:HJS.Block.BlockId.IdInvalid2">
            <summary>Invalid block identifier</summary>
        </member>
        <member name="T:HJS.Block.HeaderPosition">
            <summary>Enumeration for byte position in block header</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.Type">
            <summary>Position of block type</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.Version">
            <summary>Position of block version</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.SizeLowByte">
            <summary>Lowbyte of block size</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.SizeHighByte">
            <summary>Highbyte of block size</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.ChecksumLowByte">
            <summary>Lowbyte of block checksum</summary>
        </member>
        <member name="F:HJS.Block.HeaderPosition.ChecksumHighByte">
            <summary>Highbyte of block checksum</summary>
        </member>
        <member name="F:HJS.Block.mType">
            <summary>Type of block (contained in block header)</summary>
        </member>
        <member name="F:HJS.Block.mVersion">
            <summary>Version of block (contained in block header)</summary>
        </member>
        <member name="F:HJS.Block.mSize">
            <summary>Size of complete block (contained in block header)</summary>
        </member>
        <member name="F:HJS.Block.mChecksum">
            <summary>Checksum of block (contained in block header)</summary>
        </member>
        <member name="F:HJS.Block.mBlockData">
            <summary>Byte array of date (formally Pointer to block data)</summary>
        </member>
        <member name="M:HJS.Block.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="P:HJS.Block.Type">
            <summary>Accessors of type of block</summary>
        </member>
        <member name="P:HJS.Block.Version">
            <summary>Accessors of block version</summary>
        </member>
        <member name="P:HJS.Block.DataSize">
            <summary>Accessors of block data size</summary>
        </member>
        <member name="P:HJS.Block.Checksum">
            <summary>Accesssors to checksum
            Read only</summary>
        </member>
        <member name="M:HJS.Block.GetData(System.Byte[]@)">
            <summary>Get block object byte array (formally pointer to data)</summary>
            <returns>No return value, on errors target is set to null</returns>
        </member>
        <member name="M:HJS.Block.CheckChecksum">
            <summary>Check block for valid checksum</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.Block.GenerateChecksum">
            <summary>Generate block data checksum and put it in the header</summary>
        </member>
        <member name="M:HJS.Block.ReadRaw(System.Byte[]@,System.Boolean)">
            <summary>Read complete block from byte array, including block header.
            The block object has to be initialized before, especially type
            and version!</summary>
            <param name="SourceData">Source byte array</param>
            <param name="KeepVersion">Flag if existing version of block should
            not be changed</param>
            <returns></returns>
        </member>
        <member name="M:HJS.Block.WriteRaw(System.Byte[]@)">
            <summary>Write a complete block to a byte array, including block header
            </summary><param name="Data">Target byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="F:HJS.Block.mCrc16Table">
            <summary>Table of CRC-16 Polynomial (0x8005) for byte wise usage </summary>
        </member>
        <member name="M:HJS.Block.GenerateCRC16(System.Byte[],System.UInt16,System.UInt16)">
            <summary>Generates Cyclic redundancy check (CRC16)
            Byte wise Generation with use of table instead of polynomial</summary>
            <param name="Data">Byte array of data to be checked</param>
            <param name="Size">Number of bytes to be checked</param>
            <param name="StartValue">Initial value of this check.
            Normal start value 0x0000. reverse start value 0xFFFF.
            Segmented crc start value is crc from previous segment</param>
            <returns>The ShiftRegister (checksum)</returns>
        </member>
        <member name="M:HJS.Block.UpdateHeader(System.Byte[]@,System.Boolean)">
            <summary>Update header data (except type, version only if required)</summary>
            <param name="SourceHeader">Reference to header byte array</param>
            <param name="KeepVersion">Flag if version must be kept</param>
            <returns>True, if header was updated</returns>
        </member>
        <member name="M:HJS.Block.GetCfgVersion">
            <summary>Get version string of block, only valid on configuration blocks</summary>
            <returns>String of version</returns>
        </member>
        <member name="T:HJS.BlockFile">
            <summary>Block file object class</summary>
        </member>
        <member name="T:HJS.BlockFile.FileIdentifier">
            <summary>Enumeration for identifiers different block file types
            (file extensions)</summary>
        </member>
        <member name="F:HJS.BlockFile.FileIdentifier.None">
            <summary>Null enumeration</summary>
        </member>
        <member name="F:HJS.BlockFile.FileIdentifier.ParameterSet">
            <summary>Parameter set (K)</summary>
        </member>
        <member name="F:HJS.BlockFile.FileIdentifier.Draft">
            <summary>Draft of parameter set (V)</summary>
        </member>
        <member name="F:HJS.BlockFile.FileIdentifier.ReadData">
            <summary>Data read from System (D)</summary>
        </member>
        <member name="M:HJS.BlockFile.Open(HJS.BlockFile.FileIdentifier,System.String)">
            <summary>Open block file (for reading)</summary>
            <param name="Id">Identifier of file</param>
            <param name="FileName">Path to file
            including name with extension</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.BlockFile.Close">
            <summary>Close block file</summary>
        </member>
        <member name="M:HJS.BlockFile.Create(HJS.BlockFile.FileIdentifier,System.String,System.Boolean)">
            <summary>Create new block file
            Existing files will be truncated</summary>
            <param name="Id">File extension identifier</param>
            <param name="FileName">Name of new file
            (including file extension)</param>
            <param name="CreateAuthorBlock">Flag if author block is
            automatically generated and attached to file</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.BlockFile.GetBlock(HJS.Block@,HJS.Block.BlockId,System.Boolean)">
            <summary>Get certain block from file</summary>
            <param name="pBlock">Reference to target block</param>
            <param name="BlockType">Type of block</param>
            <param name="KeepVersion">Flag if current version of target
            block is not allowed to be changed</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.BlockFile.PutBlock(HJS.Block)">
            <summary>Append a block to a file
            This function can not replace existing blocks!</summary>
            <param name="pBlock">Block to append</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="F:HJS.BlockFile.VERSION_OF_BLOCK_FILE">
            <summary>Block file format version number</summary>
        </member>
        <member name="F:HJS.BlockFile.FILE_ID_2">
            <summary>constant for second identifier byte : B</summary>
        </member>
        <member name="F:HJS.BlockFile.FILE_ID_3">
            <summary>constant for third identifier byte : F</summary>
        </member>
        <member name="F:HJS.BlockFile.mNumberOfBlocks">
            <summary>Number of containing blocks</summary>
        </member>
        <member name="F:HJS.BlockFile.FILE_HEADER_SIZE">
            <summary>Size of block header</summary>
        </member>
        <member name="F:HJS.BlockFile.hFile">
            <summary>Handle to binary file</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.AcquisitionItem">
            <summary>Acquisition item (single row)</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.AcquisitionItem.Row">
            <summary>String array of row entries</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.AcquisitionItem.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.Acquisition">
            <summary>Measurement history (acquisition) of HJS-ECU</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mNumberOfBlocks">
            <summary>Number of acquisition data flash blocks (32768 bytes)</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mSaveMin">
            <summary>Savemask for minimum values</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mSaveAvg">
            <summary>Savemask for average values</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mSaveMax">
            <summary>Savemask for maximum values</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mSourceValues">
            <summary>Measurement identifiers of sources</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mHead">
            <summary>String array of table headlines</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mValuePosition">
            <summary>Value position</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mRowLength">
            <summary>Number of bytes per acquisition item</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.mItem">
            <summary>Item array of acquisition data</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Acquisition.ReadBuffer">
            <summary>Current acquisition data flash block</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Acquisition.NumberOfBlocks">
            <summary>Accessors to number of used acquisition data blocks</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.SetConfiguration(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Set acquisition configuration according to connected ECU</summary>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.ImportSector(System.Byte[]@,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Import one flash block from ECU</summary>
            <param name="Data">Referece to target byte array</param>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.NumberOfItems">
            <summary>Get number of acquisition items</summary>
            <returns>Number of acquisition items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.DeleteItems">
            <summary>Delete acquisition items</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.XmlExport(System.String,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Export acquisition data to a XML file</summary>
            <param name="Filename">Target file name</param>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Acquisition.CsvExport(System.String,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Export acquisition data to a CSV file</summary>
            <param name="Filename">Target file name</param>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="T:HJS.ECU.Diagnostics.ActualValueItem">
            <summary>Item of actual values</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValueItem.Name">
            <summary>Name of actual value</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValueItem.ValueString">
            <summary>String of value of actual value</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValueItem.Unit">
            <summary>Unit string of actual value</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValueItem.Hidden">
            <summary>Flag if actual value is hidden</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValueItem.Display">
            <summary>Flag if actual value is shown in displays</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.ActualValues">
            <summary>Class for object list of actual values</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValues.mReadBuffer">
            <summary>Byte array of communicated raw data</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValues.Item">
            <summary>Array of actual value items</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValues.mValueNumber">
            <summary>Number of items</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ActualValues.mProtocol">
            <summary>Connection to protocol</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ActualValues.EcuProtocol">
            <summary>Accessors of protocol connection</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ActualValues.ValueNumber">
            <summary>Accessors of number of values</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.#ctor(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Constructor of actual value object</summary>
            <param name="CurrentProtocol">Reference to current protocol</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.SetNewProtocol(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Prepare array sizes to new protocol</summary>
            <param name="CurrentProtocol">Reference to used protocol</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.RefreshValues">
            <summary>Get new data from ECU</summary>
            <returns>True on success, false on error, then old data will be available</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.RefreshLanguage(System.Boolean)">
            <summary>Get strings for actual values from language read by connection
            The text for unit is automatically alternative unit, if factor is set</summary>
            <param name="NoAltUnit">True to use original unit, false for alternative unit (if available)</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.XmlExport(System.String)">
            <summary>Export actual values to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.CsvExport(System.String)">
            <summary>Export actual values to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ActualValues.ToBlock">
            <summary>Export raw data to block</summary>
            <returns>Block of raw data</returns>
        </member>
        <member name="T:HJS.ECU.Diagnostics.Diag">
            <summary>Diagnostics class</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mProtocol">
            <summary>Interface of ECU communication protocol</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mPortname">
            <summary>String of current or last used serial port</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mKey">
            <summary>Byte array of ECU keyword</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLanguage">
            <summary>Language identifier</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mAcquisition">
            <summary>Acquisition block object</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mErrorStack">
            <summary>Error stack object</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mActualValues">
            <summary>Actual values object</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mErrorRing">
            <summary>Error ring object</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mDtcStack">
            <summary>Diagnostic trouble codes</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mConfig">
            <summary>Local copy of configuration block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mDatamap">
            <summary>Local copy of datamap block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLanguage1">
            <summary>Local copy of first language block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLanguage2">
            <summary>Local copy of second language block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLanguage3">
            <summary>Local copy of third language block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLanguage4">
            <summary>Local copy of fourth language block; used only for verifying</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.mLastReturnValue">
            <summary>Last occured error identifier</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.PortName">
            <summary>Accessors to current or last used serial port string</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.Language">
            <summary>Accessors to current language identifier</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.HardwareVersion">
            <summary>Accessors for hardware version as string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.SoftwareVersion">
            <summary>Accessors for software version as string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.SerialNumber">
            <summary>Accessors for serial number as string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ProductionDate">
            <summary>Accessors for production date
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ConfigVersion">
            <summary>Accessors for configuration version as string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.DatamapVersion">
            <summary>Accessors for data map version as string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.LastReturnValue">
            <summary>Accessors to last occured error or return value
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ProtocolVersion">
            <summary>Accessors to current protocol version
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.CompatibilityNumber">
            <summary>Accessors to current ecu compatibility
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.InternalDescr">
            <summary>Description of internal values of info block
            Read only</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.Diag.Orders">
            <summary>Enumeration of diagnostic orders</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.additiveReset">
            <summary>Additive reset</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.filterChanged">
            <summary>Filter changed</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.dosingPulses">
            <summary>Dosing pulses</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.regenerationStart">
            <summary>Regeneration start / stop</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.preAlarmPressure">
            <summary>Set pre alarm pressure</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.preAlarmTime">
            <summary>Set pre alarm time</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.mainAlarmPressure">
            <summary>Set main alarm pressure</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.mainAlarmTime">
            <summary>Set main alarm time</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.calibrateDiffPSensor">
            <summary>Calibrate differential pressure sensor</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.calibrateAmbPSensor">
            <summary>Calibrate ambient pressuer sensor</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.turnsFactor">
            <summary>Set turns factor</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.fuelSensorSignal">
            <summary>Set fuel sensor signal</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.fuelSensorGain">
            <summary>Set fuel sensor gain</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.Diag.Orders.toggleEgr">
            <summary>Toggle EGR</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.#ctor(System.String,System.Byte[],HJS.ECU.Protocol.ProtocolBase.LanguageId)">
            <summary>Overloaded constructor</summary>
            <param name="PortName">Name of port</param>
            <param name="Key">Byte array of ECU key. (If not array of 8 bytes, an exception is thrown!)</param>
            <param name="LanguageIdentifier">Identifier of language</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetLastReturnValue">
            <summary>Get string of last error (return value)</summary>
            <returns>String in english naming the last error</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetLastTimeStamp">
            <summary>Get date time object of last communication time stamp</summary>
            <returns>Date time object of last communication time stamp</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetCompatibility">
            <summary>Get compatibility number of ecu software</summary>
            <returns>Compatibility number of ecu software</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.SetTime(System.DateTime)">
            <summary>Set ecu time</summary>
            <param name="NewTime">Date time object of new ecu time</param>
            <returns>True in success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.SetProductionData(System.UInt32,System.Int16)">
            <summary>Set Production data (SN, date, temperature)</summary>
            <param name="serialNumber">New serialnumber</param>
            <param name="temperature">New temperature</param>
            <returns>True in success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetEcuTemperatureOffset">
            <summary>Get temperature offset from production data block</summary>
            <returns>Current temperature offset</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ChangeServerIdentifier(HJS.ECU.Port.Comm.ServerByte)">
            <summary>Change protocol server identifier</summary>
            <param name="ServerByte">New server identifier</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ChangePassword(System.Byte[])">
            <summary>Change protpcol password</summary>
            <param name="Key">Byte array of ECU key. (If not array of 8 bytes, an exception is thrown!)</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.Connect(HJS.ECU.Port.Comm.PortType,System.Boolean)">
            <summary>Start connection to ECU</summary>
            <param name="ConnectionType">Port connection type</param>
            <param name="LocalTime">Flag if time displayed local (or UTC)</param>
            <returns>True if connected successfully</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.FastConnect(HJS.ECU.Port.Comm.PortType)">
            <summary>Start connection to ECU without reading language!</summary>
            <returns>True if connected successfully</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.Disconnect">
            <summary>Disconnect ECU</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.EcuVersions">
            <summary>Get string of all versions of connected ECU</summary>
            <returns>String, including Version of hardware, software, configuration and serial number</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetInfoText">
            <summary>Get info text fom ECU</summary>
            <returns>String of info text</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.MasterReset">
            <summary>Reset all empirical values and erase all flash ring memory</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.Reboot(HJS.ECU.Protocol.ProtocolBase.RebootMode)">
            <summary>Reboot into normal mode</summary>
            <param name="BootMode">Parameter for rebooting</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.Order(HJS.ECU.Diagnostics.Diag.Orders,System.UInt16)">
            <summary>Send order to ecu</summary>
            <param name="OrderId">Order enumerator</param>
            <param name="OrderValue">Value of order</param>
            <returns>Treu on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.DirectOrder(System.Byte,System.UInt16)">
            <summary>Send direct order to ECU</summary>
            <param name="OrderByte">Order byte</param>
            <param name="Parameter">Parameter</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.SaveReadDataFile(System.String)">
            <summary>Save read data block file</summary>
            <param name="Filename">Failename</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadAvailableLanguages(System.Collections.Generic.List{System.String}@)">
            <summary>Read list of available languages</summary>
            <param name="languages">Output list of strings</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadActiveTaskList(System.Collections.Generic.List{System.String}@)">
            <summary>Read list of active tasks</summary>
            <param name="tasks">Output list of strings</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadSbcRegister">
            <summary>Read system basis chip registers</summary>
            <returns>Value of SBC registers</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.IsUpdateableTo(System.String)">
            <summary>Check if current software version is updateable
            If PSoC version 8 is on ECU, the ECU can be updated</summary>
            <param name="Version">Version string to be updated to</param>
            <returns>True if software is updatebale</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.StartUpdateParameterset(HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@)">
            <summary>Start multithreaded uploading of parameterset with up to 8 languages</summary>
            <param name="Config">Reference to configuration block</param>
            <param name="Datamap">Reference to data map block</param>
            <param name="Language1">Reference to first language block</param>
            <param name="Language2">Reference to second language block</param>
            <param name="Language3">Reference to third language block</param>
            <param name="Language4">Reference to fourth language block</param>
            <param name="Language5">Reference to fifth language block</param>
            <param name="Language6">Reference to sixth language block</param>
            <param name="Language7">Reference to seventh language block</param>
            <param name="Language8">Reference to eigth language block</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.StartUpdateParameterset(HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@,HJS.Block@)">
            <summary>Start multithreaded uploading of parameterset with up to 8 languages</summary>
            <param name="Config">Reference to configuration block</param>
            <param name="Datamap">Reference to data map block</param>
            <param name="Language1">Reference to first language block</param>
            <param name="Language2">Reference to second language block</param>
            <param name="Language3">Reference to third language block</param>
            <param name="Language4">Reference to fourth language block</param>
            <param name="Language5">Reference to fifth language block</param>
            <param name="Language6">Reference to sixth language block</param>
            <param name="Language7">Reference to seventh language block</param>
            <param name="Language8">Reference to eigth language block</param>
            <param name="Report">Reference to report block</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.CheckLanguage(HJS.Block.BlockId,System.UInt16)">
            <summary>Read language and check checksum</summary>
            <param name="Language">Language identifier</param>
            <param name="Checksum">Reference checksum</param>
            <returns>True is language is loaded and checksums matching</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetBlock(HJS.Block.BlockId)">
            <summary>Read parameter block from ecu</summary>
            <param name="Identifier">Identifier of block to read</param>
            <returns>Parameter block, or null on error</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueNumber">
            <summary>Get number of actual values</summary>
            <returns>Number of actual value items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueName(System.Byte)">
            <summary>Get name of actual value by position</summary>
            <param name="Position">Position of actual value</param>
            <returns>String of value name</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueString(System.Byte)">
            <summary>Get value string of actual value by position</summary>
            <param name="Position">Position of actual value</param>
            <returns>Value string</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueUnit(System.Byte)">
            <summary>Get unit name of actual value by position</summary>
            <param name="Position">Position of actual value</param>
            <returns>String of unit of actual value</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueHidden(System.Byte)">
            <summary>Get hidden flag of actual value by position</summary>
            <param name="Position">Position of actual value</param>
            <returns>True if actual value is hidden</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetActualValueDisplayed(System.Byte)">
            <summary>Get display flag of actual value by position</summary>
            <param name="Position">Position of actual value</param>
            <returns>True if actual value is displayed</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadActualValues">
            <summary>Read actual values from ECU</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ActualValuesXmlExport(System.String)">
            <summary>Export actual values to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ActualValuesCsvExport(System.String)">
            <summary>Export actual values to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ActualValuesToggleUnit(System.Boolean)">
            <summary>Toggle Alternative unit and original unit</summary>
            <param name="NoAltUnit">True to use original unit,
            false for alternative unit (if available)</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.AcquiStep(System.UInt16)">
            <summary>Routine for multi threaded acquisition reading to raw file</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.AcquiItems">
            <summary>Get number of error ring items</summary>
            <returns>Number of error ring items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.AcquiDeleteItems">
            <summary>Delete error ring items</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.Acqui">
            <summary>Multi threaded read out of acquisition data to raw file</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.AcquiXmlExport(System.String)">
            <summary>Export acquisition data to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.AcquiCsvExport(System.String)">
            <summary>Export acquisition data to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrStack">
            <summary>Get recent error stack data from ecu</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorName(System.UInt16)">
            <summary>Get name of error by position</summary>
            <param name="Position">Position of error (same as ID)</param>
            <returns>String of error name</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.IsErrorOrEvent(System.UInt16)">
            <summary>Get flag if error is only an event</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event only</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorState(System.UInt16)">
            <summary>Get state of error by position</summary>
            <param name="Position">Position of error (same as ID)</param>
            <returns>String of error state</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorFirstAppear(System.UInt16)">
            <summary>Read date / time of first apperance</summary>
            <param name="Position">Identifier of error (error number)</param>
            <returns>Date and time of first apperance</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorLastAppear(System.UInt16)">
            <summary>Read date / time of last apperance</summary>
            <param name="Position">Identifier of error (error number)</param>
            <returns>Date and time of last apperance</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorAppearedUntil(System.UInt16)">
            <summary>Read date / time of apperanced until</summary>
            <param name="Position">Identifier of error (error number)</param>
            <returns>Date and time of apperanced until</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetNumberOfAppearances(System.UInt16)">
            <summary>Read number of appearances</summary>
            <param name="Position">Identifier of error (error number)</param>
            <returns>Number of appearances</returns>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ErrorBehaveMask">
            <summary>Accessors to behave mask from error stack
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetBehaveName(System.Byte)">
            <summary>Get name of behave</summary>
            <param name="Position">Position of behave</param>
            <returns>String of behave name</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetBehaveState(System.Byte)">
            <summary>Get state of behave</summary>
            <param name="Position">Position of behave</param>
            <returns>String of behave state</returns>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ErrorActualMask">
            <summary>Accessors to actual error mask from error stack
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.ErrorActiveMask">
            <summary>Accessors to active error mask from error stack
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.IsErrorOccured(System.Byte)">
            <summary>Check if error is occured</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>True if error is occured at least once</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ResetErrorStack">
            <summary>Clear error stack</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrorBehaveXmlExport(System.String)">
            <summary>Export error stack and behaves to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrorBehaveCsvExport(System.String)">
            <summary>Export error stack and behaves to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrRingStep(System.Byte)">
            <summary>Error ring</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrRingItems">
            <summary>Get number of error ring items</summary>
            <returns>Number of error ring items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrRingDeleteItems">
            <summary>Delete error ring items</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetErrorRingBlockNumber">
            <summary>Get number of error ring blocks / sectors</summary>
            <returns>Number of error ring blocks / sectors</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrorRingXmlExport(System.String)">
            <summary>Export error ring data to XML file</summary>
            <param name="Filename">Filename</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ErrorRingCsvExport(System.String)">
            <summary>Export error ring data to CSV file</summary>
            <param name="Filename">Filename</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadRtc">
            <summary>Read RTC data</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetNumberOfVolatiles">
            <summary>Get number of volatiles values</summary>
            <returns>Number of volatiles values</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetVolatileValue(System.UInt16)">
            <summary>Get volatile value as string</summary>
            <param name="Position">Position of volatile value</param>
            <returns>Volatile value as string</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadEmpiricals">
            <summary>Read empirical data</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetEmpiricalGroupNames(System.String[]@)">
            <summary>Get empirical group names</summary>
            <param name="GroupNames">Position of group</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetNumberOfEmpiricalValues(System.UInt16)">
            <summary>Get number of empirical values</summary>
            <param name="Group">Position of group</param>
            <returns>Number of values</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetEmpiricalValue(System.UInt16,System.UInt16)">
            <summary>Get empirical value string</summary>
            <param name="GroupPosition">Position of group</param>
            <param name="ValuePosition">Position of value</param>
            <returns>String with name and value</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.EmpiricalXmlExport(System.String)">
            <summary>Export empirical values to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.EmpiricalCsvExport(System.String)">
            <summary>Export empirical values to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadDtc">
            <summary>Read DTC data</summary>
            <returns>True on success</returns>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.DtcInfo">
            <summary>Info text of diagnostic trouble codes</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.DtcFF">
            <summary>Freeze frame text of diagnostic trouble codes</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.Diag.GetDtcDerateFlags">
            <summary>Get DTC derating and flags text</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetDtcItemCount">
            <summary>Get number of stack items</summary>
            <returns>Number of stack items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetDtcItem(System.Byte,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>Get stack item strings</summary>
            <param name="Position">Position of stack item</param>
            <param name="strFreeWarmUps">Free warm ups of stack item</param>
            <param name="strErrorNumber">Error number of stack item</param>
            <param name="strOccuranceCounter">Occurance counter of stack item</param>
            <param name="strPending">Pending flag of stack item</param>
            <param name="strActive">Active flag of stack item</param>
            <param name="strPrevActive">Previously active flag of stack item</param>
            <param name="strSPN">Suspect parameter number of stack item</param>
            <param name="strFMI">Failure mode identifier of stack item</param>
            <returns>True if stack item strings are set</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.WriteConfig(System.Byte[])">
            <summary>Write configuration in old mode (erase and write for HW 1.34)</summary>
            <param name="Data">Source byte array</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.WriteDatamap(System.Byte[])">
            <summary>Write datamap in old mode (erase and write for HW 1.34)</summary>
            <param name="Data">Source byte array</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.WriteLanguage(System.Int32,System.Byte[])">
            <summary>Write one language in old mode (erase and write for HW 1.34)</summary>
            <param name="Position">Position of language in ecu</param>
            <param name="Data">Source byte array</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.GetNumberOfUpdatables">
            <summary>Get number of updatable empirical values</summary>
            <returns>Number of updatable empirical values</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.ReadUpdatables(System.Byte[]@)">
            <summary>Read updatable empirical data</summary>
            <param name="target">Output byte array</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.Diag.SetUpdatable(System.Int32,System.Byte[])">
            <summary>Set updatable empirical value</summary>
            <param name="Position">Position of updatable empirical value</param>
            <param name="Data">Source byte array</param>
            <returns>True on success</returns>
        </member>
        <member name="T:HJS.ECU.Diagnostics.ErrorRingItem">
            <summary>Error history entry of ECU</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.Date">
            <summary>Entry date</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.TaskId">
            <summary>Task identifier of entry creator</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.LfdNo">
            <summary>Task message number of entry creator</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.ErrorNo">
            <summary>Error number</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.Wert1">
            <summary>Environmental value 1</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.Wert2">
            <summary>Environmental value 2</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRingItem.Wert3">
            <summary>Environmental value 3</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.ErrorRing">
            <summary>Error history of HJS-ECU</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.ErrorRing.mItem">
            <summary>Array of entry item</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.ImportSector(System.Byte[]@,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Import error ring sector from byte array</summary>
            <param name="Data">Raw byte array</param>
            <param name="protocol">Reference to active protocol object</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.NumberOfItems">
            <summary>Get number of error ring items</summary>
            <returns>Number of error ring items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.DeleteItems">
            <summary>Delete error ring items</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.XmlExport(System.String,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Export error ring data to a XML file</summary>
            <param name="Filename">Target file name</param>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorRing.CsvExport(System.String,HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Export error ring data to a CSV file</summary>
            <param name="Filename">Target file name</param>
            <param name="protocol">Reference to protocol to connected ECU</param>
        </member>
        <member name="T:HJS.ECU.Diagnostics.ErrorStack">
            <summary>Error stack of HJS-ECU</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ErrorStack.EcuProtocol">
            <summary>Accessors to protocol</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ErrorStack.BitMaskBehave">
            <summary>Accessors to behave bit mask
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ErrorStack.BitmaskErrorActual">
            <summary>Accessors to actual error bit mask
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.ErrorStack.BitmaskErrorActive">
            <summary>Accessors to active error bit mask
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.#ctor(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Constructor</summary>
            <param name="CurrentProtocol">Reference to connected ECU protocol</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.Reset">
            <summary>Delete error stack on ECU</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.SetNewProtocol(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Refresh protocol reference</summary>
            <param name="CurrentProtocol">Reference to protocol</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.ReadFromEcu">
            <summary>Read error stack from ecu</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.IsErrorOccured(System.Byte)">
            <summary>Check if error has occured</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>True if error is occured at least once</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetFirstAppear(System.Byte)">
            <summary>Read date / time of first apperance</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>Date and time of first apperance</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetLastAppear(System.Byte)">
            <summary>Read date / time of last apperance</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>Date and time of last apperance</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetAppearedUntil(System.Byte)">
            <summary>Read date / time of apperanced until</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>Date and time of apperanced until</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetNumberOfAppearances(System.Byte)">
            <summary>Read number of appearances</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>Number of appearnces</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetErrorState(System.Byte)">
            <summary>Get state of error</summary>
            <param name="ErrorNo">Identifier of error (error number)</param>
            <returns>State of error as string</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.GetBehaveState(System.Byte)">
            <summary>Get state of behave</summary>
            <param name="Position">Position of behave</param>
            <returns>String of behave state</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.XmlExport(System.String)">
            <summary>Export error stack to a XML file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.CsvExport(System.String)">
            <summary>Export error stack to a CSV file</summary>
            <param name="Filename">Target file name</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.ErrorStack.ToBlock">
            <summary>Generate block from byte array</summary>
            <returns>Block of error stack data</returns>
        </member>
        <member name="T:HJS.ECU.Diagnostics.TroubleCodeItem">
            <summary>Diagnostic trouble codes stack item</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.FreeWarmUps">
            <summary>Number of warmups without this error</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.ErrorNumber">
            <summary>Identifier or DTC number of error</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.OccuranceCounter">
            <summary>Occurance counter</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.isPending">
            <summary>This error code is currently pending.
            That means it appears the current or last driving cycle.</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.isActive">
            <summary>This error code is currently active.
            That means the errror appeared in more than one consecutive driving cycle
            and the error is currently present.</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.isPrevActive">
            <summary>This error code is currently active.
            That means the errror appeared in more than one consecutive driving cycle.
            The error is currently not present, but the error has not been deleted at this time.</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.SuspectParameterNumber">
            <summary>SPN matching to error</summary>
        </member>
        <member name="F:HJS.ECU.Diagnostics.TroubleCodeItem.FailureModeIdentifier">
            <summary>FMI matching to error</summary>
        </member>
        <member name="T:HJS.ECU.Diagnostics.TroubleCodes">
            <summary>Diagnostic trouble codes (DTC)</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.TroubleCodes.Info">
            <summary>Info string
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.TroubleCodes.FreezeFrame">
            <summary>Freeze frame data
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Diagnostics.TroubleCodes.DeratingAndFlags">
            <summary>Deratinglevel and Flags for DM1
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.TroubleCodes.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:HJS.ECU.Diagnostics.TroubleCodes.ReadTroubleCodeTable(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Read DTC table</summary>
            <param name="CurrentProtocol">Reference to connected ECU protocol</param>
        </member>
        <member name="M:HJS.ECU.Diagnostics.TroubleCodes.GetStackItemCount">
            <summary>Get number of stack items</summary>
            <returns>Number of stack items</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.TroubleCodes.GetStackItem(System.Byte,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>Get stack item strings</summary>
            <param name="Position">Position of stack item</param>
            <param name="strFreeWarmUps">Free warm ups of stack item</param>
            <param name="strErrorNumber">Error number of stack item</param>
            <param name="strOccuranceCounter">Occurance counter of stack item</param>
            <param name="strPending">Pending flag of stack item</param>
            <param name="strActive">Active flag of stack item</param>
            <param name="strPrevActive">Previously active flag of stack item</param>
            <param name="strSPN">Suspect parameter number of stack item</param>
            <param name="strFMI">Failure mode identifier of stack item</param>
            <returns>True if stack item strings are set</returns>
        </member>
        <member name="M:HJS.ECU.Diagnostics.TroubleCodes.Read(HJS.ECU.Protocol.ProtocolBase@)">
            <summary>Read data from byte array</summary>
            <param name="protocol">Reference to ecu protocol</param>
            <returns>True on success</returns>
        </member>
        <member name="T:HJS.ECU.DigitalInfoBlock">
            <summary>Object class for block of digital informations of ECU</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mProductionYear">
            <summary>Data byte of digital info block for year of production</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mProductionMonth">
            <summary>Data byte of digital info block for month of production</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mProductionDay">
            <summary>Data byte of digital info block for day of production</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mProductionHour">
            <summary>Data byte of digital info block for hour of production</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mProductionMinute">
            <summary>Data byte of digital info block for minute of production</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSerialNumber0">
            <summary>Data byte of digital info block for serial number first byte (LSB)</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSerialNumber1">
            <summary>Data byte of digital info block for serial number second byte</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSerialNumber2">
            <summary>Data byte of digital info block for serial number third byte</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSerialNumber3">
            <summary>Data byte of digital info block for serial number fourth byte (MSB)</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mHardwareMainLowByte">
            <summary>Data byte of digital info block for low byte of hardware main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mHardwareMainHighByte">
            <summary>Data byte of digital info block for high byte of hardware main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mHardwareMidByte">
            <summary>Data byte of digital info block for hardware secondary version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mHardwareRevision">
            <summary>Data byte of digital info block for hardware revision</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSoftwareMainLowByte">
            <summary>Data byte of digital info block for low byte of software main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSoftwareMainHighByte">
            <summary>Data byte of digital info block for high byte of software main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSoftwareMidByte">
            <summary>Data byte of digital info block for software secondary version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mSoftwareRevision">
            <summary>Data byte of digital info block for software revision</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mConfigurationMainLowByte">
            <summary>Data byte of digital info block for low byte of configuration main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mConfigurationMainHighByte">
            <summary>Data byte of digital info block for high byte of configuration main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mConfigurationMidByte">
            <summary>Data byte of digital info block for configuration secondary version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mConfigurationRevision">
            <summary>Data byte of digital info block for configuration revision</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mDataMapMainLowByte">
            <summary>Data byte of digital info block for low byte of data map main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mDataMapMainHighByte">
            <summary>Data byte of digital info block for high byte of data map main version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mDataMapMidByte">
            <summary>Data byte of digital info block for data map secondary version</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mDataMapRevision">
            <summary>Data byte of digital info block for data map revision</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuSecond">
            <summary>Data byte of digital info block for real time clock second</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuMinute">
            <summary>Data byte of digital info block for real time clock minute</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuHour">
            <summary>Data byte of digital info block for real time clock hour</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuDay">
            <summary>Data byte of digital info block for real time clock day in month</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuMonth">
            <summary>Data byte of digital info block for real time clock month</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEcuYear">
            <summary>Data byte of digital info block for real time clock year</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSource">
            <summary>Data byte array of digital info block for array of acquisition sources</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSaveMask0">
            <summary>Data byte of digital info block for first byte (LSB)
            of save-bit-mask of acquisition sources</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSaveMask1">
            <summary>Data byte of digital info block for second byte
            of save-bit-mask of acquisition sources</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSaveMask2">
            <summary>Data byte of digital info block for third byte
            of save-bit-mask of acquisition sources</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSaveMask3">
            <summary>Data byte of digital info block for fourth byte (MSB)
            of save-bit-mask of acquisition sources</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.scTecuOffset">
            <summary>Data byte of digital info block for ECU temperature offset (signed)</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mCompatibleRevision">
            <summary>Data byte of digital info block for compatible software revision</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mAqSizeNumBlocks">
            <summary>Data byte of digital info block for number of acquisition ring flash blocks</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mErrorRingNumSectors">
            <summary>Data byte of digital info block for number of error ring flash blocks</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEmpiricalVersion">
            <summary>Data byte of digital info block for version of empirical values</summary>
        </member>
        <member name="F:HJS.ECU.DigitalInfoBlock.mEnvironmentFigures">
            <summary>Data byte array of digital info block for array
            of environmental values matching to error numbers</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.ProductionDate">
            <summary>Accessors for ECU production date
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.SerialNumber">
            <summary>Accessors for ECU serial number
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.HardwareVersion">
            <summary>Accessors for version of hardware
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.SoftwareVersion">
            <summary>Accessors for version of software
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.ConfigurationVersion">
            <summary>Accessors for version of configuration
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.DatamapVersion">
            <summary>Accessors for version of data map
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.ConnectionDate">
            <summary>Accessors for Connection date
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.AcquisitionSaveMask">
            <summary>Accessors for acquisition save bit mask
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.EcuTemperatureOffset">
            <summary>Accessors for ECU temperature offset (signed)
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.CompatibleRevision">
            <summary>Accessors for compatible software version
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.AqSizeNumBlocks">
            <summary>Accessors for acquisition number of flash blocks
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.ErrorRingNumSectors">
            <summary>Accessors for error ring number of flash blocks
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.DigitalInfoBlock.EmpiricalVersion">
            <summary>Accessors for version of empirical value structure
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.DigitalInfoBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.DigitalInfoBlock.Parse(System.Byte[]@)">
            <summary>Read digital information (block) from byte array</summary>
            <param name="SourceData">Reference to source byte array</param>
            <returns>0 on success, see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.DigitalInfoBlock.GetAcquisitionSource(System.Byte)">
            <summary>Get measurement value identifier of acquisition source</summary>
            <param name="Position">Position of value in acquisition array</param>
            <returns>Value identifier, or 255 on error</returns>
        </member>
        <member name="M:HJS.ECU.DigitalInfoBlock.GetErrorRingFigure(System.Byte,System.Byte)">
            <summary>Get measurement value identifier of error ring environmental figures</summary>
            <param name="ErrorNumber">Appropriate error number (0 .. 63)</param>
            <param name="ValuePosition">Position of value (0 .. 2)</param>
            <returns>Value identifier, or 255 on error</returns>
        </member>
        <member name="T:HJS.ECU.EmpiricalDataBlock">
            <summary>Block object of empirical data</summary>
        </member>
        <member name="M:HJS.ECU.EmpiricalDataBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.EmpiricalDataBlock.Parse(System.Byte[]@)">
            <summary>Read empirical data (block) from byte array</summary>
            <param name="SourceData">Reference to source byte array</param>
            <returns>0 on success, see ReturnValue</returns>
        </member>
        <member name="T:HJS.ECU.EmpiricalDataBlock.GroupName">
            <summary>Group names</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Regenerieren">
            <summary>Regeneration</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Heizen">
            <summary>Heater</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.BeladungCRT">
            <summary>Continous regeneration trap</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Flash">
            <summary>Flash memory</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Additivieren">
            <summary>Additivating</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.IKD">
            <summary>Intelligent continous dosing</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.VERT">
            <summary>VERT</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Turns">
            <summary>Turns and Speeds</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Dosieren">
            <summary>Dosing</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.IO">
            <summary>In- and outputs</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.DPD">
            <summary>Drive pattern detection</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Tankgeber">
            <summary>Fuel sensor</summary>
        </member>
        <member name="F:HJS.ECU.EmpiricalDataBlock.GroupName.Updateables">
            <summary>Values that can be updated by communication commands</summary>
        </member>
        <member name="M:HJS.ECU.EmpiricalDataBlock.GetNumberOfValues(HJS.ECU.EmpiricalDataBlock.GroupName)">
            <summary>Get number of values</summary>
            <param name="Group">Enumeration of group</param>
            <returns>Number of values</returns>
        </member>
        <member name="M:HJS.ECU.EmpiricalDataBlock.GetEmpiricalValue(HJS.ECU.EmpiricalDataBlock.GroupName,System.UInt16)">
            <summary>Get empirical value as string</summary>
            <param name="Group">Enumeration of group</param>
            <param name="Position">Position of empirical value</param>
            <returns>Empirical value as string</returns>
        </member>
        <member name="T:HJS.ECU.TaskIdentifier">
            <summary>Enumeration for task identifier</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskPreDiagnose">
            <summary>Pre diagnose task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskPostDiagnose">
            <summary>Post diagnose task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskTankgeber">
            <summary>Tankgeber task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskKommunikation">
            <summary>Kommunication task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskIo">
            <summary>I/O task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskDosieren">
            <summary>Dosieren task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskAdditivierung">
            <summary>Additivieren task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskVertWatch">
            <summary>VERT watvch task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskBeladPro">
            <summary>Beladung prozentual task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskCanIn">
            <summary>CAN I/O task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskBeladMittel">
            <summary>Beladung mittelung task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskAcquisition">
            <summary>Acquisition task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskTurnspeed">
            <summary>Turnspeed task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskBeladKennfeld">
            <summary>Beladung Kennfeld task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskRegenerieren">
            <summary>Regenerieren task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskHeizen">
            <summary>Heizen task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskAgr">
            <summary>AGR task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskDrivePattern">
            <summary>Drive pattern detection task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskBeladLuftmasse">
            <summary>Beladung Luftmasse task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskBeladCRT">
            <summary>Beladung CRT task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskCanCom">
            <summary>Can communication task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskIcDosing">
            <summary>ICDosing task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskSaeComm">
            <summary>J1939 session layer task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskAplSae">
            <summary>J1939 application layer task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskMassAirFlow">
            <summary>Mass air flow task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskGrundfos">
            <summary>Grundfos urea pump task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskStaudruck">
            <summary>Back pressure task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskScrHeiz">
            <summary>SCR heater task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskCAN2Com">
            <summary>Can 2 com task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskSelfRegeneration">
            <summary>Self regeneration detection task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskXCP">
            <summary>XCP task</summary>
        </member>
        <member name="F:HJS.ECU.TaskIdentifier.taskInvalid">
            <summary>Invalid task identifier</summary>
        </member>
        <member name="T:HJS.ECU.Firmware">
            <summary>Class for firmware (software of HJS-ECU) relevant data</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.mRevisionPsoc8">
            <summary>Compatibility since PSoC version 8 (max. downgradable)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.mSoftwareRevision">
            <summary>Compatibility of firmware</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.PsocGain">
            <summary>Enumeration of PSoC gain values used for egr and fuel level sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_06">
            <summary>Gain 0.06</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G16_0">
            <summary>Gain 16.0</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G48_0">
            <summary>Gain 48.0</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_12">
            <summary>Gain 0.12</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G8_00">
            <summary>Gain 8.00</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G24_0">
            <summary>Gain 24.0</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_18">
            <summary>Gain 0.18</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G5_33">
            <summary>Gain 5.33</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_25">
            <summary>Gain 0.25</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G4_00">
            <summary>Gain 4.00</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_31">
            <summary>Gain 0.31</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G3_20">
            <summary>Gain 3.20</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_37">
            <summary>Gain 0.37</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G2_67">
            <summary>Gain 2.67</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_43">
            <summary>Gain 0.43</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G2_27">
            <summary>Gain 2.27</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_50">
            <summary>Gain 0.50</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G2_00">
            <summary>Gain 2.00</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_56">
            <summary>Gain 0.56</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_78">
            <summary>Gain 1.78</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_62">
            <summary>Gain 0.62</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_60">
            <summary>Gain 1.60</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_68">
            <summary>Gain 0.68</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_46">
            <summary>Gain 1.46</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_75">
            <summary>Gain 0.75</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_33">
            <summary>Gain 1.33</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_81">
            <summary>Gain 0.81</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_23">
            <summary>Gain 1.23</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_87">
            <summary>Gain 0.87</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_14">
            <summary>Gain 1.14</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G0_93">
            <summary>Gain 0.93</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_06">
            <summary>Gain 1.06</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.PsocGain.PGA_G1_00">
            <summary>Gain 1.00</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.TankSignal">
            <summary>Enumeration of fuel level sensor signal types</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_NULL">
            <summary>Null enumeration</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_NEU_120R">
            <summary>Input B, resistor, 120 ohm ohm pullup</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_NEU_1K2">
            <summary>Input B, resistor, 1.2 k ohm pullup</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_ANALOG">
            <summary>Input A, voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_GEPULST">
            <summary>Input A, pulsed, double pulse</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_GEPULST_V36">
            <summary>Input A, pulsed, single pulse (since SW 1.x)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_PWM">
            <summary>Input EGR, pulse width modulation</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.TankSignal.TK_FREQUENZ">
            <summary>Input EGR, frequency</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.CanBaudrate">
            <summary>Enumeration for Baudrates</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.CanBaudrate.BR_NOT_SET">
            <summary>Baudrate not set</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.CanBaudrate.BR_125_KHZ">
            <summary>Can baudrate 125000 Hz</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.CanBaudrate.BR_250_KHZ">
            <summary>Can baudrate 250000 Hz</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.CanBaudrate.BR_500_KHZ">
            <summary>Can baudrate 500000 Hz</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.MessWert8">
            <summary>Enumeration for measured and calcuated values compatibility 8</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULL_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULH_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULL_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULH_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULL_DOSIERIMPULSE">
            <summary>dosing pulses absolute low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULH_DOSIERIMPULSE">
            <summary>dosing pulses absolute high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_ADDITIV_IST">
            <summary>current additive concentration</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_ADDITIV_SOLL">
            <summary>additive concentration should</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TANKINHALT">
            <summary>fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TANKINHALT_MITTEL">
            <summary>averaged fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_GEGENDRUCKMITTEL">
            <summary>averaged pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_KILOMETER">
            <summary>counted kilometers</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_RUSSMENGE">
            <summary>soot rate [mg/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULL_BELADUNGSSUMME">
            <summary>soot load sum low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULH_BELADUNGSSUMME">
            <summary>soot load sum high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_REGTIME">
            <summary>regerating time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZLEISTUNG_SOLL">
            <summary>desired heating power</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZLEISTUNG_IST_A">
            <summary>heating power a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZLEISTUNG_IST_B">
            <summary>heating power b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZLEISTUNG_IST_100A">
            <summary>possible heating power a at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZLEISTUNG_IST_100B">
            <summary>possible heating power b at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_SHS_STATUS">
            <summary>status register from both single highside switches</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_STROM_A">
            <summary>heating current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_STROM_B">
            <summary>heating current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_RI_A">
            <summary>resistance of heating element a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_RI_B">
            <summary>resistance of heating element b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZ_PWM_A">
            <summary>pwm of heater a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_HEIZ_PWM_B">
            <summary>pwm of heater b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_IMPULSTIME">
            <summary>duration of dosing pulse [ms]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_MIN_I_TIME">
            <summary>moment of lowest current after saddle piont</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_STATUS">
            <summary>state of dosing pulse</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_IST_STROM">
            <summary>latest measures dosing current for curve sketching</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_MAX_STROM">
            <summary>dosing current at saddle point</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_DIDT_MIN">
            <summary>lowest Di/Dt</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_DEBUG5">
            <summary>debug 5</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_DEBUG6">
            <summary>debug 6</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_DEBUG7">
            <summary>debug 7</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_REGWUNSCH">
            <summary>current filterload in percent</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_BELADUNG_REGBAR">
            <summary>regeratable filterload</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_REG_SPERRZEIT">
            <summary>regeneration lock time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_PASSWD0">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_PASSWD1">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_PASSWD2">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_PASSWD3">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_OPERATIONTIME">
            <summary>operation time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_LUFTMENGE">
            <summary>air volume flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_REINIGUNGS_INTERVALL">
            <summary>cleaning cycle</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TANKMENGE_GESAMT">
            <summary>total fuel</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CRTDRUCKMITTEL">
            <summary>averaged pressure for CRT</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CRTWIRKUNGMITTEL">
            <summary>CRT temperature coefficient</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_DELTA_JOULE_A">
            <summary>deviation of launced heat energy a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_DELTA_JOULE_B">
            <summary>deviation of launced heat energy b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_SAVE_VALUE">
            <summary>number of saving empirical values</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_REG_STARTS">
            <summary>number of regenerations</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULL_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_ULH_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DERATING_LEVEL">
            <summary>derating level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_KRAFTSTOFFVERBRAUCH">
            <summary>fuel consumption</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERINTERVALL">
            <summary>time between continous dosing pulses</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_FILTER_RUNTIME">
            <summary>filter runtime for ICDosing</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_ICD_STATUS">
            <summary>ICDosing status bitmask</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_MAF_AIR_PESS">
            <summary>Intake air pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_MAF_AIR_TEMP">
            <summary>Intake air temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_MAF_LMS_OUT">
            <summary>Intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_MAF_LMS_OUT">
            <summary>A/D Value for intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_SCR_ERROR">
            <summary>Grundfos SCR Error</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_GRUNDFOS_TANKLEVEL">
            <summary>ADBlue tank level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_VIEW_P_ALARM">
            <summary>Visualisation of pressure alarm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_VIEW_T_ALARM">
            <summary>Visualisation of pressure alarm time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_VIEW_P_WARN">
            <summary>Visualisation of pressure warning</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_VIEW_T_WARN">
            <summary>Visualisation of pressure warning time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_UB">
            <summary>operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TIME">
            <summary>minutes since programmed (last 2 bytes)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_P_VOR">
            <summary>filter back pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_T_ECU">
            <summary>temperature inside ECU</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_T_VOR">
            <summary>temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_T_NACH">
            <summary>temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_LAST">
            <summary>load or air mass flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_KL15">
            <summary>Clamp15</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_D_PLUS">
            <summary>D+</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_TANK">
            <summary>ADC value for fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_FREE3">
            <summary>ADC value for former fuel level b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_FREE2">
            <summary>ADC value for former unternal supply voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_P_VOR">
            <summary>ADC value for differential filter pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_FREE1">
            <summary>ADC value for former mosfet temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_I_HEIZ_A">
            <summary>ADC value for heat current A</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_UB">
            <summary>ADC value for operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_T_VOR">
            <summary>ADC value for temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_T_NACH">
            <summary>ADC value for temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_I_HEIZ_B">
            <summary>ADC value for heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_I_PUMP">
            <summary>ADC value for dosing pump current</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AD_LAST">
            <summary>ADC value for load signal or air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_I_HEIZ_A">
            <summary>normed heat current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_I_HEIZ_B">
            <summary>normed heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TANKINHALT_PROZENT">
            <summary>normed fuel level 0,00% - 100,00%</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_TANKINHALT_LITER">
            <summary>normed fuel level [l]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_GESCHWINDIGKEIT">
            <summary>speed [100m/h]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DREHZAHL">
            <summary>motor speed [U/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_LMM_PWM">
            <summary>pwm of air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AGR_PWM">
            <summary>pwm of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AGR_FREQUENZ">
            <summary>frequency of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AGR_POS">
            <summary>position for EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_AGR_OFFSET">
            <summary>offset fir EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_R_T_VOR">
            <summary>resistance of first temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_R_T_NACH">
            <summary>resistance of second temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_STARTUP">
            <summary>startup counter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_0">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_1">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_2">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_3">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_4">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_5">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_6">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_7">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_8">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_9">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_10">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_11">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_12">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_13">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_14">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_15">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_16">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_17">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_18">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_19">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_20">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_21">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_22">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_23">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_24">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_25">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_26">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_27">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_28">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_DOSIERSTROM_29">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_VALUE_1">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_VALUE_2">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_VALUE_3">
            <summary>value 3 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_VALUE_4">
            <summary>value 4 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_CAN_VALUE_5">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_CAN_VALUE_6">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_ORDER">
            <summary>can order register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_CAN_ERROR">
            <summary>can error register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_WAKEUP_CTR">
            <summary>wake up counter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_PNORM">
            <summary>temperature normed pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_PSOC_VER">
            <summary>PSoC-Version</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_ADSTAUDRUCK">
            <summary>Impact pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_SI_CoolantTemp">
            <summary>Coolant temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_MAF_FLOWRATE">
            <summary>Flow rate of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.MRW_UI_MAF_PUMP_STATUS">
            <summary>Status of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert8.NotAvailable">
            <summary>Value for N/A or unused</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.MessWert9">
            <summary>Enumeration for measured and calcuated values compatibility 9</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_DOSIERIMPULSE">
            <summary>dosing pulses absolute low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_DOSIERIMPULSE">
            <summary>dosing pulses absolute high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ADDITIV_IST">
            <summary>current additive concentration</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ADDITIV_SOLL">
            <summary>additive concentration should</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_TANKINHALT">
            <summary>fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_TANKINHALT">
            <summary>fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_TANKINHALT_MITTEL">
            <summary>averaged fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_TANKINHALT_MITTEL">
            <summary>averaged fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_GEGENDRUCKMITTEL">
            <summary>averaged pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_KILOMETER">
            <summary>counted kilometers</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_RUSSMENGE">
            <summary>soot rate [mg/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_BELADUNGSSUMME">
            <summary>soot load sum low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_BELADUNGSSUMME">
            <summary>soot load sum high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_REGTIME">
            <summary>regerating time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZLEISTUNG_SOLL">
            <summary>desired heating power</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZLEISTUNG_IST_A">
            <summary>heating power a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZLEISTUNG_IST_B">
            <summary>heating power b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZLEISTUNG_IST_100A">
            <summary>possible heating power a at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZLEISTUNG_IST_100B">
            <summary>possible heating power b at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_SHS_STATUS">
            <summary>status register from both single highside switches</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_STROM_A">
            <summary>heating current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_STROM_B">
            <summary>heating current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_RI_A">
            <summary>resistance of heating element a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_RI_B">
            <summary>resistance of heating element b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZ_PWM_A">
            <summary>pwm of heater a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_HEIZ_PWM_B">
            <summary>pwm of heater b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_IMPULSTIME">
            <summary>duration of dosing pulse [ms]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_MIN_I_TIME">
            <summary>moment of lowest current after saddle piont</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_STATUS">
            <summary>state of dosing pulse</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_IST_STROM">
            <summary>latest measures dosing current for curve sketching</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_MAX_STROM">
            <summary>dosing current at saddle point</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_DIDT_MIN">
            <summary>lowest Di/Dt</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_DEBUG5">
            <summary>debug 5</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_DEBUG6">
            <summary>debug 6</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_DEBUG7">
            <summary>debug 7</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_REGWUNSCH">
            <summary>current filterload in percent</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_BELADUNG_REGBAR">
            <summary>regeratable filterload</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_REG_SPERRZEIT">
            <summary>regeneration lock time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_PASSWD0">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_PASSWD1">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_PASSWD2">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_PASSWD3">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_OPERATIONTIME">
            <summary>operation time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_LUFTMENGE">
            <summary>air volume flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_REINIGUNGS_INTERVALL">
            <summary>cleaning cycle</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_TANKMENGE_GESAMT">
            <summary>total fuel</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_TANKMENGE_GESAMT">
            <summary>total fuel</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CRTDRUCKMITTEL">
            <summary>averaged pressure for CRT</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CRTWIRKUNGMITTEL">
            <summary>CRT temperature coefficient</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_DELTA_JOULE_A">
            <summary>deviation of launced heat energy a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_DELTA_JOULE_B">
            <summary>deviation of launced heat energy b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_SAVE_VALUE">
            <summary>number of saving empirical values</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_REG_STARTS">
            <summary>number of regenerations</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULL_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_ULH_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DERATING_LEVEL">
            <summary>derating level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_KRAFTSTOFFVERBRAUCH">
            <summary>fuel consumption</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERINTERVALL">
            <summary>time between continous dosing pulses</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_FILTER_RUNTIME">
            <summary>filter runtime for ICDosing</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ICD_STATUS">
            <summary>ICDosing status bitmask</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_MAF_AIR_PESS">
            <summary>Intake air pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_MAF_AIR_TEMP">
            <summary>Intake air temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_MAF_LMS_OUT">
            <summary>Intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_MAF_LMS_OUT">
            <summary>A/D Value for intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_SCR_ERROR">
            <summary>Grundfos SCR Error</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_GRUNDFOS_TANKLEVEL">
            <summary>ADBlue tank level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_VIEW_P_ALARM">
            <summary>Visualisation of pressure alarm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_VIEW_T_ALARM">
            <summary>Visualisation of pressure alarm time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_VIEW_P_WARN">
            <summary>Visualisation of pressure warning</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_VIEW_T_WARN">
            <summary>Visualisation of pressure warning time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ADDITIV_REST">
            <summary>Remaining Additiv in tank</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_UB">
            <summary>operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_TIME">
            <summary>minutes since programmed (last 2 bytes)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_P_VOR">
            <summary>filter back pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_T_ECU">
            <summary>temperature inside ECU</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_T_VOR">
            <summary>temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_T_NACH">
            <summary>temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_LAST">
            <summary>load or air mass flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_KL15">
            <summary>Clamp15</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_D_PLUS">
            <summary>D+</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_TANK">
            <summary>ADC value for fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_FREE3">
            <summary>ADC value for former fuel level b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_FREE2">
            <summary>ADC value for former unternal supply voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_P_VOR">
            <summary>ADC value for differential filter pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_FREE1">
            <summary>ADC value for former mosfet temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_I_HEIZ_A">
            <summary>ADC value for heat current A</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_UB">
            <summary>ADC value for operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_T_VOR">
            <summary>ADC value for temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_T_NACH">
            <summary>ADC value for temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_I_HEIZ_B">
            <summary>ADC value for heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_I_PUMP">
            <summary>ADC value for dosing pump current</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AD_LAST">
            <summary>ADC value for load signal or air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_I_HEIZ_A">
            <summary>normed heat current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_I_HEIZ_B">
            <summary>normed heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_TANKINHALT_PROZENT">
            <summary>normed fuel level 0,00% - 100,00%</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_TANKINHALT_LITER">
            <summary>normed fuel level [l]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_GESCHWINDIGKEIT">
            <summary>speed [100m/h]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DREHZAHL">
            <summary>motor speed [U/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_LMM_PWM">
            <summary>pwm of air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AGR_PWM">
            <summary>pwm of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AGR_FREQUENZ">
            <summary>frequency of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AGR_POS">
            <summary>position for EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_AGR_OFFSET">
            <summary>offset fir EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_R_T_VOR">
            <summary>resistance of first temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_R_T_NACH">
            <summary>resistance of second temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_STARTUP">
            <summary>startup counter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_0">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_1">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_2">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_3">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_4">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_5">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_6">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_7">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_8">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_9">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_10">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_11">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_12">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_13">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_14">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_15">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_16">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_17">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_18">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_19">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_20">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_21">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_22">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_23">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_24">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_25">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_26">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_27">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_28">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_DOSIERSTROM_29">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_1">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_2">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_3">
            <summary>value 3 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_4">
            <summary>value 4 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_5">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_6">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_7">
            <summary>value 3 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_VALUE_8">
            <summary>value 4 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_9">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_10">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_11">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_12">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_13">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_14">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_15">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CAN_VALUE_16">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_ORDER">
            <summary>can order register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_CAN_ERROR">
            <summary>can error register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_WAKEUP_CTR">
            <summary>wake up counter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_PNORM">
            <summary>temperature normed pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_PSOC_VER">
            <summary>PSoC-Version</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ADSTAUDRUCK">
            <summary>Impact pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_SI_CoolantTemp">
            <summary>Coolant temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_MAF_FLOWRATE">
            <summary>Flow rate of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_MAF_PUMP_STATUS">
            <summary>Status of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.MRW_UI_ABSOLUTDRUCK">
            <summary>Absolute ambient pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert9.NotAvailable">
            <summary>Value for N/A or unused</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.MessWert10">
            <summary>Enumeration for measured and calcuated values compatibility 10</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_DOSIERIMPULSE_TANK">
            <summary>dosing pulses from tank high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_DOSIERIMPULSE_FILTER">
            <summary>dosing pulses in filter high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_DOSIERIMPULSE">
            <summary>dosing pulses absolute low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_DOSIERIMPULSE">
            <summary>dosing pulses absolute high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ADDITIV_IST">
            <summary>current additive concentration</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ADDITIV_SOLL">
            <summary>additive concentration should</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_TANKINHALT">
            <summary>fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_TANKINHALT">
            <summary>fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_TANKINHALT_MITTEL">
            <summary>averaged fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_TANKINHALT_MITTEL">
            <summary>averaged fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_GEGENDRUCKMITTEL">
            <summary>averaged pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_KILOMETER">
            <summary>counted kilometers</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_RUSSMENGE">
            <summary>soot rate [mg/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_BELADUNGSSUMME">
            <summary>soot load sum low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_BELADUNGSSUMME">
            <summary>soot load sum high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_REGTIME">
            <summary>regerating time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZLEISTUNG_SOLL">
            <summary>desired heating power</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZLEISTUNG_IST_A">
            <summary>heating power a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZLEISTUNG_IST_B">
            <summary>heating power b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZLEISTUNG_IST_100A">
            <summary>possible heating power a at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZLEISTUNG_IST_100B">
            <summary>possible heating power b at 100% pwm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_SHS_STATUS">
            <summary>status register from both single highside switches</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_STROM_A">
            <summary>heating current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_STROM_B">
            <summary>heating current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_RI_A">
            <summary>resistance of heating element a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_RI_B">
            <summary>resistance of heating element b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZ_PWM_A">
            <summary>pwm of heater a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_HEIZ_PWM_B">
            <summary>pwm of heater b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_IMPULSTIME">
            <summary>duration of dosing pulse [ms]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_MIN_I_TIME">
            <summary>moment of lowest current after saddle piont</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_STATUS">
            <summary>state of dosing pulse</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_IST_STROM">
            <summary>latest measures dosing current for curve sketching</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_MAX_STROM">
            <summary>dosing current at saddle point</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_DIDT_MIN">
            <summary>lowest Di/Dt</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ECU_STATUS">
            <summary>ECU Status</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_DEBUG6">
            <summary>debug 6</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_DEBUG7">
            <summary>debug 7</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_REGWUNSCH">
            <summary>current filterload in percent</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_BELADUNG_REGBAR">
            <summary>regeratable filterload</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_REG_SPERRZEIT">
            <summary>regeneration lock time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_PASSWD0">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_PASSWD1">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_PASSWD2">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_PASSWD3">
            <summary>password</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_OPERATIONTIME">
            <summary>operation time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_LUFTMENGE">
            <summary>air volume flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_REINIGUNGS_INTERVALL">
            <summary>cleaning cycle</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_TANKMENGE_GESAMT">
            <summary>total fuel</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_TANKMENGE_GESAMT">
            <summary>total fuel</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CRTDRUCKMITTEL">
            <summary>averaged pressure for CRT</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CRTWIRKUNGMITTEL">
            <summary>CRT temperature coefficient</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_DELTA_JOULE_A">
            <summary>deviation of launced heat energy a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_DELTA_JOULE_B">
            <summary>deviation of launced heat energy b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_SAVE_VALUE">
            <summary>number of saving empirical values</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_REG_STARTS">
            <summary>number of regenerations</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULL_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption low int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_ULH_COMPLETE_JOULE">
            <summary>absolute heat ernergy consumption high int</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DERATING_LEVEL">
            <summary>derating level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_KRAFTSTOFFVERBRAUCH">
            <summary>fuel consumption</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERINTERVALL">
            <summary>time between continous dosing pulses</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_FILTER_RUNTIME">
            <summary>filter runtime for ICDosing</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ICD_STATUS">
            <summary>ICDosing status bitmask</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_MAF_AIR_PESS">
            <summary>Intake air pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_MAF_AIR_TEMP">
            <summary>Intake air temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_MAF_LMS_OUT">
            <summary>Intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_MAF_LMS_OUT">
            <summary>A/D Value for intake mass air flow rate (calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_SCR_ERROR">
            <summary>Grundfos SCR Error</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_GRUNDFOS_TANKLEVEL">
            <summary>ADBlue tank level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_VIEW_P_ALARM">
            <summary>Visualisation of pressure alarm</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_VIEW_T_ALARM">
            <summary>Visualisation of pressure alarm time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_VIEW_P_WARN">
            <summary>Visualisation of pressure warning</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_VIEW_T_WARN">
            <summary>Visualisation of pressure warning time</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ADDITIV_REST">
            <summary>Remaining Additiv in tank</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_UB">
            <summary>operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_TIME">
            <summary>minutes since programmed (last 2 bytes)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_P_VOR">
            <summary>filter back pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_T_ECU">
            <summary>temperature inside ECU</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_T_VOR">
            <summary>temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_T_NACH">
            <summary>temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_LAST">
            <summary>load or air mass flow</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_KL15">
            <summary>Clamp15</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_D_PLUS">
            <summary>D+</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_TANK">
            <summary>ADC value for fuel level</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_FREE3">
            <summary>ADC value for former fuel level b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_FREE2">
            <summary>ADC value for former unternal supply voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_P_VOR">
            <summary>ADC value for differential filter pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_FREE1">
            <summary>ADC value for former mosfet temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_I_HEIZ_A">
            <summary>ADC value for heat current A</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_UB">
            <summary>ADC value for operating voltage</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_T_VOR">
            <summary>ADC value for temperature in front of filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_T_NACH">
            <summary>ADC value for temperature after filter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_I_HEIZ_B">
            <summary>ADC value for heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_I_PUMP">
            <summary>ADC value for dosing pump current</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AD_LAST">
            <summary>ADC value for load signal or air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_I_HEIZ_A">
            <summary>normed heat current a</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_I_HEIZ_B">
            <summary>normed heat current b</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_TANKINHALT_PROZENT">
            <summary>normed fuel level 0,00% - 100,00%</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_TANKINHALT_LITER">
            <summary>normed fuel level [l]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_GESCHWINDIGKEIT">
            <summary>speed [100m/h]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DREHZAHL">
            <summary>motor speed [U/min]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_LMM_PWM">
            <summary>pwm of air mass sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AGR_PWM">
            <summary>pwm of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AGR_FREQUENZ">
            <summary>frequency of EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AGR_POS">
            <summary>position for EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_AGR_OFFSET">
            <summary>offset fir EGR</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_R_T_VOR">
            <summary>resistance of first temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_R_T_NACH">
            <summary>resistance of second temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_STARTUP">
            <summary>startup counter</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_0">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_1">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_2">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_3">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_4">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_5">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_6">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_7">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_8">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_9">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_10">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_11">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_12">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_13">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_14">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_15">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_16">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_17">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_18">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_19">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_20">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_21">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_22">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_23">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_24">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_25">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_26">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_27">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_28">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_DOSIERSTROM_29">
            <summary>array for dosing current samples</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_1">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_2">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_3">
            <summary>value 3 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_4">
            <summary>value 4 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_5">
            <summary>value 1 from can i.e. turns</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_6">
            <summary>value 2 from can i.e. speed</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_7">
            <summary>value 3 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_VALUE_8">
            <summary>value 4 from can</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_9">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_10">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_11">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_12">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_13">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_14">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_15">
            <summary>value 5 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CAN_VALUE_16">
            <summary>value 6 from can (signed)</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_ORDER">
            <summary>can order register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_CAN_ERROR">
            <summary>can error register</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_FREE_01">
            <summary>Unused value</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_PNORM">
            <summary>temperature normed pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_PSOC_VER">
            <summary>PSoC-Version</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ADSTAUDRUCK">
            <summary>Impact pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_SI_CoolantTemp">
            <summary>Coolant temperature</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_MAF_FLOWRATE">
            <summary>Flow rate of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_MAF_PUMP_STATUS">
            <summary>Status of Grundfos pump</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.MRW_UI_ABSOLUTDRUCK">
            <summary>Absolute ambient pressure</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.MessWert10.NotAvailable">
            <summary>Value for N/A or unused</summary>
        </member>
        <member name="T:HJS.ECU.Firmware.KennfeldTyp">
            <summary>Enumeration for data map types</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.dummy">
            <summary>Dummy</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.CrtDruckMittelMax">
            <summary>Maximales Druckmittel pro Betriebsstunde</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.CrtDruckMittelMin">
            <summary>Minimales Druckmittel pro Betriebsstunde</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.CrtTemperaturWirkungsgrad">
            <summary>Wirkungsgradkennlinie CRT Temperatur</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.CrtDruckAbweichungMax">
            <summary>max. Druckabweichung pro CRT Wirkungsgrad</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.CrtDruckAbweichungMin">
            <summary>min. Druckabweichung pro CRT Wirkungsgrad</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulBeladKennfeldID">
            <summary>ulBeladKennfeldID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulGegendruckKennfeldI">
            <summary>ulGegendruckKennfeldI</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulRegentimeKennfeldID">
            <summary>ulRegentimeKennfeldID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulBeladungLKFID">
            <summary>ulBeladungLKFID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulFreigabeLKFID">
            <summary>ulFreigabeLKFID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulKennfeldID">
            <summary>ulKennfeldID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulFreigabeKennfeldID">
            <summary>ulFreigabeKennfeldID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulKennfeldObenID">
            <summary>ulKennfeldObenID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulKennfeldUntenID">
            <summary>ulKennfeldUntenID</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieLuftmassenmesser">
            <summary>Sensorkennlinie Luftmassenmesser</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieAnsaugluftdruck">
            <summary>Sensorkennlinie Ansaugluftdruck</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieAnsauglufttemperatur">
            <summary>Sensorkennlinie Ansauglufttemperatur</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.ulKFMafFactor">
            <summary>ulKFMafFactor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieTankgeberCl">
            <summary>Sensorkennlinie Tankgeber [cl]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.SendewerteDreating">
            <summary>CAN Sendewerte Dreating</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.SendewerteNoxSensor">
            <summary>CAN Sendewerte NOx Sensor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieTankgeberL">
            <summary>Sensorkennlinie Tankgeber [liter]</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.KennlinieKfactor">
            <summary>Kennlinie Staudruck K-Faktor</summary>
        </member>
        <member name="F:HJS.ECU.Firmware.KennfeldTyp.NotAvailable">
            <summary>Value for N/A or unused</summary>
        </member>
        <member name="P:HJS.ECU.Firmware.SoftwareRevision">
            <summary>Accessors of firmware revision</summary>
        </member>
        <member name="M:HJS.ECU.Firmware.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Firmware.#ctor(System.Byte)">
            <summary>Overloaded constructor</summary>
            <param name="Revision">Revision = Compatibility of firmware</param>
        </member>
        <member name="M:HJS.ECU.Firmware.GetValuePosition(System.Byte)">
            <summary>Get position of value in table / structure by value identifier</summary>
            <param name="ValueId">Identifier of value</param>
            <returns>Position in table, 255 if invalid ID</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetMeasuredValueNumber">
            <summary>Get number of measured actual values</summary>
            <returns>Number of measured actual values</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetValueNumber">
            <summary>Get number of actual values</summary>
            <returns>Number of actual values</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetMessWertString(System.Int32)">
            <summary>Get identifier of actual value by position as string</summary>
            <param name="Position">Position of actual value</param>
            <returns>Identifier of actual value as string</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetValueIdentifier8(System.Int32)">
            <summary>Get identifier of actual value by position of compatibility 8 as string</summary>
            <param name="Position">Position of actual value of compatibility 8</param>
            <returns>Identifier of actual value as string</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetValueIdentifier9(System.Int32)">
            <summary>Get identifier of actual value by position of compatibility 9 as string</summary>
            <param name="Position">Position of actual value of compatibility 9</param>
            <returns>Identifier of actual value as string</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetValueIdentifier10(System.Int32)">
            <summary>Get identifier of actual value by position of compatibility 10 as string</summary>
            <param name="Position">Position of actual value of compatibility 10</param>
            <returns>Identifier of actual value as string</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.IsUpdateableTo(System.String)">
            <summary>Check if current software version is updateable
            If PSoC version 8 is on ECU, the ECU can be updated</summary>
            <param name="Version">Version string to be updated to</param>
            <returns>True if software is updatebale</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.UpgradeMessWert8to9(System.Byte)">
            <summary>Upgrade value of MessWert enumeration from compatibility 8 to 9</summary>
            <param name="mrw8">Value of enumeration in compatibility 8 as byte</param>
            <returns>Value of enumeration in compatibility 9 as byte</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.CheckMesswertFlag(HJS.ECU.Firmware.MessWert8,System.Byte)">
            <summary>Check plausibility of value flags
            Check for signed, group and decimals (incl. hex)</summary>
            <param name="mrw">Value Identifier</param>
            <param name="flags">Flag byte</param>
            <returns>True if flags are plausible</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.CheckMesswertFlag(HJS.ECU.Firmware.MessWert9,System.Byte)">
            <summary>Check plausibility of value flags
            Check for signed, group and decimals (incl. hex)</summary>
            <param name="mrw">Value Identifier</param>
            <param name="flags">Flag byte</param>
            <returns>True if flags are plausible</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.CheckMesswertFlag(HJS.ECU.Firmware.MessWert10,System.Byte)">
            <summary>Check plausibility of value flags
            Check for signed, group and decimals (incl. hex)</summary>
            <param name="mrw">Value Identifier</param>
            <param name="flags">Flag byte</param>
            <returns>True if flags are plausible</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetTotalStackSize(System.Byte)">
            <summary>Get number of bytes for all task stacks</summary>
            <param name="Revision">Compatiblity revision</param>
            <returns>Number of bytes for all task stacks</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.GetTaskError(HJS.ECU.TaskIdentifier,System.Int32)">
            <summary>Get default error number</summary>
            <param name="task">Task identifier</param>
            <param name="position">Task error position (0..6)</param>
            <returns>Default Error number (1..63), or 0 for not used, or 255 for obsolete = any number allowed</returns>
        </member>
        <member name="M:HJS.ECU.Firmware.IsValueSigned(System.Int32)">
            <summary>Get value signed flag from Firmware</summary>
            <param name="Position">Position in value array from ECU</param>
            <returns>True if value is signed</returns>
        </member>
        <member name="T:HJS.ECU.InternalDataItem">
            <summary>Interal data list item</summary>
        </member>
        <member name="P:HJS.ECU.InternalDataItem.Name">
            <summary>Name of internal data item</summary>
        </member>
        <member name="P:HJS.ECU.InternalDataItem.ValueString">
            <summary>String of value of internal data item</summary>
        </member>
        <member name="P:HJS.ECU.InternalDataItem.Group">
            <summary>String of group name of internal data item</summary>
        </member>
        <member name="T:HJS.ECU.LanguageBlock">
            <summary>Class for language blocks</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueName">
            <summary>Name of actual value</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueDecimals">
            <summary>Number of Decimals of actual value</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueHexValue">
            <summary>Actual value is hexadecimal</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueSigned">
            <summary>Actual value is signed</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueGroup">
            <summary>Actual value is in group of calculated values</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueHidden">
            <summary>Actual value is hidden</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueHiddenInDisplay">
            <summary>Actual value is hidden in displays</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueUnit">
            <summary>Unit of actual value</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueFaktor">
            <summary>Factor for alternative Unit (formally known as A)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueDivisor">
            <summary>Divisor for alternative Unit (formally known as B)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueOffset">
            <summary>Offset for alternative Unit (formally known as C)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mValueAltUnit">
            <summary>Alternative unit of actual value</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mErrorName">
            <summary>Name of error event</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mErrorEvent">
            <summary>Flag if error is event</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mErrorHidden">
            <summary>Flag if error is hidden</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mErrorLcdShow">
            <summary>Flag if error is shown on displays</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mErrorBlueLed">
            <summary>Flag if error is blue led</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mBehaveName">
            <summary>Name of behave</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mNoAltUnit">
            <summary>Flag if calculation into alternative unit is denied</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.MAX_NUMBER_OF_VALUES">
            <summary>Array size of Values</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.MAX_NUMBER_OF_ERRORS">
            <summary>Array size of errors</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.MAX_NUMBER_OF_BEHAVES">
            <summary>Array size of behaves</summary>
        </member>
        <member name="T:HJS.ECU.LanguageBlock.Group">
            <summary>Enumeration of language groups</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.Group.Values">
            <summary>Measured and calculated values</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.Group.Errors">
            <summary>Errors and events</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.Group.Behaves">
            <summary>Behaves</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.Group.Max">
            <summary>Maximum number of groups</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.DELIMITER_COLUMN">
            <summary>Delimiter for columns (null termination)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.DELIMITER_ROW">
            <summary>Delimiter for rows (\N)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.DELIMITER_GROUP">
            <summary>Delimiter for groups (\R)</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.FACTOR_OFFSET">
            <summary>Offset in byte array for value factor and value divisor</summary>
        </member>
        <member name="F:HJS.ECU.LanguageBlock.mParsedBytes">
            <summary>Number of parsed bytes</summary>
        </member>
        <member name="P:HJS.ECU.LanguageBlock.NoAltUnit">
            <summary>Flag if calculation into alternative unit is denied</summary>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.#ctor(HJS.Block.BlockId)">
            <summary>Overloaded constructor</summary>
            <param name="language">Block identifier of new language</param>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.#ctor(HJS.Block)">
            <summary>Overloaded constructor with copying from base class</summary>
            <param name="b">Base class object</param>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.ReadPlain(System.Byte[]@)">
            <summary>Read language block from plain data (raw array from old protocol i.e. 14)</summary>
            <param name="SourceData">Reference to plain byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.Parse">
            <summary>Read language information (block) from byte array</summary>
            <returns>0 on success, see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.adjustCodepage">
            <summary>Adjust encoding codepage according to current language via blockidentifier</summary>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.getParsedBytes">
            <summary>Get number of used bytes (detected while / after parsing byte array)</summary>
            <returns>Number of used bytes</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.PreCheckSize">
            <summary>Get number of used bytes in language data array</summary>
            <returns>Number of used bytes in language data array</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.ConvertBuffer">
            <summary>Write language information (block) to byte array</summary>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.Upgrade8to9">
            <summary>Upgrade content according to HJS.ECU.Firmware.Messwert(9 from 8)</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.PresetValueSigns(HJS.ECU.Firmware)">
            <summary>Set sign flags. Used if no language available</summary>
            <param name="fm">Current firmware object</param>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsValueHidden(System.UInt16)">
            <summary>Get hidden flag for value</summary>
            <param name="Position">Position of value in total table</param>
            <returns>true if value is hidden, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsValueDisplayed(System.UInt16)">
            <summary>Get display flag for value</summary>
            <param name="Position">Position of value in total table</param>
            <returns>true if value is displayed, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsValueGroup(System.UInt16)">
            <summary>Get group flag for value
            (0 = measured value, 1=calculated value)</summary>
            <param name="Position">Position of value in total table</param>
            <returns>False = measured value, true = calculated value</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValue(System.UInt16,System.UInt16)">
            <summary>Convert Value into a string, using format parameter
            depending on position in value table</summary>
            <param name="Position">Position in value table</param>
            <param name="Value">16 bit value to be displayed</param>
            <returns>String of value, empty string, if unable to be formated</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueName(System.UInt16)">
            <summary>Get Value name depending on position in value table</summary>
            <param name="Position">Position in value table</param>
            <returns>String of value name, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueUnit(System.UInt16)">
            <summary>Get Value unit depending on position in value table</summary>
            <param name="Position">Position in value table</param>
            <returns>String of value unit, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueUnit(System.UInt16,System.Boolean)">
            <summary>Get Value unit depending on position in value table</summary>
            <param name="Position">Position in value table</param>
            <param name="altUnit">Flag if alternative unit must be used</param>
            <returns>String of value unit, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueDecimals(System.UInt16)">
            <summary>Get number of decimal</summary>
            <param name="Position">Position of value</param>
            <returns>Number of decimal</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsValueSigned(System.UInt16)">
            <summary>Get signed flag for value</summary>
            <param name="Position">Position of value in total table</param>
            <returns>true if value is signed, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsValueHexadecimal(System.UInt16)">
            <summary>Get hex flag for value</summary>
            <param name="Position">Position of value in total table</param>
            <returns>true if value is hexadecimal, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueFaktor(System.UInt16)">
            <summary>Get Factor of value</summary>
            <param name="Position">Position of value</param>
            <returns>Factor of value</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueDivisor(System.UInt16)">
            <summary>Get Divisor of value</summary>
            <param name="Position">Position of value</param>
            <returns>Divisor of value</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetValueOffset(System.UInt16)">
            <summary>Get Offset of value</summary>
            <param name="Position">Position of value</param>
            <returns>Offset of value</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueName(System.UInt16,System.String)">
            <summary>Set value name</summary>
            <param name="Position">Position of value</param>
            <param name="ValueName">Name of value</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueDecimals(System.UInt16,System.Byte)">
            <summary>Set value decimals</summary>
            <param name="Position">Position of value</param>
            <param name="Decimals">Value Decimals</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueHex(System.UInt16,System.Boolean)">
            <summary>Set value hex flag</summary>
            <param name="Position">Position of value</param>
            <param name="hexFlag">Hex flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueSigned(System.UInt16,System.Boolean)">
            <summary>Set value signed flag</summary>
            <param name="Position">Position of value</param>
            <param name="Signed">signed flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueGroup(System.UInt16,System.Boolean)">
            <summary>Set value Group flag</summary>
            <param name="Position">Position of value</param>
            <param name="Group">Group flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueHidden(System.UInt16,System.Boolean)">
            <summary>Set value Hedden flag</summary>
            <param name="Position">Position of value</param>
            <param name="Hidden">Hidden flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueHiddenInDisplay(System.UInt16,System.Boolean)">
            <summary>Set value Display flag</summary>
            <param name="Position">Position of value</param>
            <param name="HiddenInDisplay">Display flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueUnit(System.UInt16,System.String)">
            <summary>Set value unit</summary>
            <param name="Position">Position of value</param>
            <param name="ValueUnit">Value unit</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueFactor(System.UInt16,System.Byte)">
            <summary>Set value factor</summary>
            <param name="Position">Position of value</param>
            <param name="A_Factor">Value factor</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueDivisor(System.UInt16,System.Byte)">
            <summary>Set value divisor</summary>
            <param name="Position">Position of value</param>
            <param name="B_Divisor">Value divisor</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueOffset(System.UInt16,System.String)">
            <summary>Set value offset</summary>
            <param name="Position">Position of value</param>
            <param name="C_Offset">Value offset</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetValueAltUnit(System.UInt16,System.String)">
            <summary>Set value alternative unit</summary>
            <param name="Position">Position of value</param>
            <param name="ValueAltunit">Alternative unit</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.getNumberOfUsedValues">
            <summary>
            Get number of used values
            </summary>
            <returns>Number of used values</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetErrorName(System.UInt16)">
            <summary>Get error name depending on position in error table</summary>
            <param name="Position">Position in error table</param>
            <returns>String of error name, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsEventOrError(System.UInt16)">
            <summary>Get flag if error is only an event</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event only</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsEventDisplayed(System.UInt16)">
            <summary>Get flag if event is shown on display</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event is shown on display</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsEventHidden(System.UInt16)">
            <summary>Get flag if event is hidden</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event is hidden</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.IsEventBlueLed(System.UInt16)">
            <summary>Get flag if event ligts blue led on displays</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event ligts blue led on displays</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetErrorName(System.UInt16,System.String)">
            <summary>Set error name</summary>
            <param name="Position">Position of error</param>
            <param name="ErrorName">Error name</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetErrorEvent(System.UInt16,System.Boolean)">
            <summary>Set error event flag</summary>
            <param name="Position">Position of error</param>
            <param name="Event">Event flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetErrorHidden(System.UInt16,System.Boolean)">
            <summary>Set error </summary>
            <param name="Position">Position of error</param>
            <param name="Hidden">Error hidden flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetErrorLcdShow(System.UInt16,System.Boolean)">
            <summary>Set error display flag</summary>
            <param name="Position">Position of error</param>
            <param name="LcdShow">Display flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetErrorBlue(System.UInt16,System.Boolean)">
            <summary>Set error blue led flag</summary>
            <param name="Position">Position of error</param>
            <param name="BlueLed">Blue led flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.getNumberOfUsedErrors">
            <summary>
            Get number of used errors
            </summary>
            <returns>Number of used errord</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.GetBehaveName(System.UInt16)">
            <summary>Get behave name depending on position</summary>
            <param name="Position">Position of behave</param>
            <returns>String of error behave, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.SetBehaveName(System.UInt16,System.String)">
            <summary>Set behave name</summary>
            <param name="Position">Position of behave</param>
            <param name="BehaveName">Behave name</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.LanguageBlock.getNumberOfUsedBehaves">
            <summary>
            Get number of used behaves
            </summary>
            <returns>Number of used behaves</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.Configuration10_Block">
            <summary>Configuration parameter block compatibility 10 class</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.Import(HJS.Block@,System.Boolean)">
            <summary>Import from base block</summary>
            <param name="Source">Source block</param>
            <param name="KeepVersion">Flag if Target version should remain</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.Parse">
            <summary>Update byte array
            Data from header strucutres, except dynamic structures are parsed back into the byte array</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.CheckTaskOffset(System.String@,System.UInt32@)">
            <summary>Check task starting offsets</summary>
            <param name="ResultString">String of result</param>
            <param name="UsedBytes">Number of used bytes</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.GetFixedOffset(HJS.ECU.TaskIdentifier)">
            <summary>Get fixed task offset</summary>
            <param name="task">Identifier of task</param>
            <returns>Offset according HSL block structure</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.Upgrade(HJS.Block)">
            <summary>Create new configuration and fill content and byte array
            from old compatibility by item names</summary>
            <param name="OldBlock">Configuration block in old compatibility</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.CheckInitValueItems">
            <summary>Check initial value items versus plausibity</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueImport">
            <summary>Import initial values from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueGetNumber">
            <summary>Number of init value items</summary>
            <returns>Number of init value items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueGetItemName(System.Int32)">
            <summary>Get name of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Name of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueGetItemValue(System.Int32)">
            <summary>Get value of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueSetItemValue(System.Int32,System.Double)">
            <summary>Set value of init value item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueGetItemValueString(System.Int32)">
            <summary>Get value string of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.InitValueGetItemType(System.Int32)">
            <summary>Get data type of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanImport">
            <summary>Import second can from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanGetNumber">
            <summary>Number of second can items</summary>
            <returns>Number of second can items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanGetItemName(System.Int32)">
            <summary>Get name of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Name of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanGetItemValue(System.Int32)">
            <summary>Get value of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanSetItemValue(System.Int32,System.Double)">
            <summary>Set value of second can item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanGetItemValueString(System.Int32)">
            <summary>Get value string of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration10_Block.SecondCanGetItemType(System.Int32)">
            <summary>Get data type of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of second can item</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.Configuration8_Block">
            <summary>Configuration parameter block compatibility 8 class</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.Import(HJS.Block@,System.Boolean)">
            <summary>Import from base block</summary>
            <param name="Source">Source block</param>
            <param name="KeepVersion">Flag if Target version should remain</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.Parse">
            <summary>Update byte array
            Data from header strucutres, except dynamic structures are parsed back into the byte array</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.CheckTaskOffset(System.String@,System.UInt32@)">
            <summary>Check task starting offsets</summary>
            <param name="ResultString">String of result</param>
            <param name="UsedBytes">Number of used bytes</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.GetFixedOffset(HJS.ECU.TaskIdentifier)">
            <summary>Get fixed task offset</summary>
            <param name="task">Identifier of task</param>
            <returns>Offset according HSL block structure</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanImport">
            <summary>Import second can from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanGetNumber">
            <summary>Number of second can items</summary>
            <returns>Number of second can items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanGetItemName(System.Int32)">
            <summary>Get name of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Name of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanGetItemValue(System.Int32)">
            <summary>Get value of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanSetItemValue(System.Int32,System.Double)">
            <summary>Set value of second can item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanGetItemValueString(System.Int32)">
            <summary>Get value string of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.SecondCanGetItemType(System.Int32)">
            <summary>Get data type of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.CheckInitValueItems">
            <summary>Check initial value items versus plausibity</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueImport">
            <summary>Import initial values from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueGetNumber">
            <summary>Number of init value items</summary>
            <returns>Number of init value items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueGetItemName(System.Int32)">
            <summary>Get name of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Name of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueGetItemValue(System.Int32)">
            <summary>Get value of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueSetItemValue(System.Int32,System.Double)">
            <summary>Set value of init value item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueGetItemValueString(System.Int32)">
            <summary>Get value string of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration8_Block.InitValueGetItemType(System.Int32)">
            <summary>Get data type of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of init value item</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.Configuration9_Block">
            <summary>Configuration parameter block compatibility 9 class</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.Import(HJS.Block@,System.Boolean)">
            <summary>Import from base block</summary>
            <param name="Source">Source block</param>
            <param name="KeepVersion">Flag if Target version should remain</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.Parse">
            <summary>Update byte array
            Data from header strucutres, except dynamic structures are parsed back into the byte array</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.GetFixedOffset(HJS.ECU.TaskIdentifier)">
            <summary>Get fixed task offset</summary>
            <param name="task">Identifier of task</param>
            <returns>Offset according HSL block structure</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.CheckTaskOffset(System.String@,System.UInt32@)">
            <summary>Check task starting offsets</summary>
            <param name="ResultString">String of result</param>
            <param name="UsedBytes">Number of used bytes</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.Upgrade(HJS.Block)">
            <summary>Create new configuration and fill content and byte array
            from old compatibility by item names</summary>
            <param name="OldBlock">Configuration block in old compatibility</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.CheckInitValueItems">
            <summary>Check initial value items versus plausibity</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueImport">
            <summary>Import initial values from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueGetNumber">
            <summary>Number of init value items</summary>
            <returns>Number of init value items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueGetItemName(System.Int32)">
            <summary>Get name of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Name of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueGetItemValue(System.Int32)">
            <summary>Get value of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueSetItemValue(System.Int32,System.Double)">
            <summary>Set value of init value item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueGetItemValueString(System.Int32)">
            <summary>Get value string of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.InitValueGetItemType(System.Int32)">
            <summary>Get data type of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanImport">
            <summary>Import second can from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanGetNumber">
            <summary>Number of second can items</summary>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanGetItemName(System.Int32)">
            <summary>Get name of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Name of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanGetItemValue(System.Int32)">
            <summary>Get value of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanSetItemValue(System.Int32,System.Double)">
            <summary>Set value of second can item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanGetItemValueString(System.Int32)">
            <summary>Get value string of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Configuration9_Block.SecondCanGetItemType(System.Int32)">
            <summary>Get data type of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of second can item</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.TaskVector">
            <summary>Task vector table item</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskVector.Tasknummer">
            <summary>Task identifier</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskVector.Offset">
            <summary>Task offset in configuration block data</summary>
        </member>
        <member name="T:HJS.ECU.Parameter.TaskError">
            <summary>Task error item</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskError.ErrNo">
            <summary>Error number</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskError.Ring">
            <summary>Flag if error storable in ring</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskError.reserve">
            <summary>Reserved flag</summary>
        </member>
        <member name="T:HJS.ECU.Parameter.ConfigurationBlock">
            <summary>Configuration parameter block base object</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.ConfigurationBlock.mTaskAnzahl">
            <summary>Nuber of tasks</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.ConfigurationBlock.maTask">
            <summary>Array of task configurations</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ConfigurationBlock.NumberOfUsedDatamaps">
            <summary>Accessors for number of data maps</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ConfigurationBlock.ConfigVersion">
            <summary>Accessors for configuration version structure</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ConfigurationBlock.AbwaertsVersion">
            <summary>Accessors for downward revision</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ConfigurationBlock.SoftwareType">
            <summary>Accessors for software type</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ConfigurationBlock.PasswordLevel">
            <summary>Accessors for password level</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.Import(HJS.Block@,System.Boolean)">
            <summary>Import from base block</summary>
            <param name="Source">Source block</param>
            <param name="KeepVersion">Flag if Target version should remain</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.Parse">
            <summary>Update byte array
            Data from header strucutres, except dynamic structures are parsed back into the byte array</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskOffset(System.String@,System.UInt32@)">
            <summary>Check task starting offsets</summary>
            <param name="ResultString">String of result</param>
            <param name="UsedBytes">Number of used bytes</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetFixedOffset(HJS.ECU.TaskIdentifier)">
            <summary>Get fixed task offset</summary>
            <param name="task">Identifier of task</param>
            <returns>Offset according HSL block structure</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueImport">
            <summary>Import initial values from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueGetNumber">
            <summary>Number of init value items</summary>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueGetItemName(System.Int32)">
            <summary>Get name of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Name of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueGetItemValue(System.Int32)">
            <summary>Get value of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueSetItemValue(System.Int32,System.Double)">
            <summary>Set value of init value item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueGetItemValueString(System.Int32)">
            <summary>Get value string of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.InitValueGetItemType(System.Int32)">
            <summary>Get data type of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckInitValueItems">
            <summary>Check initial value items versus plausibity</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanImport">
            <summary>Import second can from base block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanGetNumber">
            <summary>Number of second can items</summary>
            <returns>Number of second can items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanGetItemName(System.Int32)">
            <summary>Get name of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Name of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanGetItemValue(System.Int32)">
            <summary>Get value of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanSetItemValue(System.Int32,System.Double)">
            <summary>Set value of second can item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanGetItemValueString(System.Int32)">
            <summary>Get value string of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SecondCanGetItemType(System.Int32)">
            <summary>Get data type of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetEnumerationArray(HJS.ECU.Parameter.TaskDataType)">
            <summary>Get array of enumeration value names of task item type</summary>
            <param name="tdtype">Task item type</param>
            <returns>Array of values or null</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetEnumerationIndex(System.Double,HJS.ECU.Parameter.TaskDataType,System.Array)">
            <summary>Get index of enumeration value in array available by GetEnumerationArray()</summary>
            <param name="EnumValue">Value of enumeration item</param>
            <param name="tdtype">Task item type</param>
            <param name="EnumArray"></param>
            <returns>Index in enumeration value array. see GetEnumerationArray</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskOffset(System.Int32)">
            <summary>Get task offset</summary>
            <param name="position">Position of task in task vector table</param>
            <returns>Byte offset of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskIdentifier(System.Int32)">
            <summary>Get internal identifier of task</summary>
            <param name="position">Position of task in task vector table</param>
            <returns>Identifier of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskVectorTable(HJS.ECU.Parameter.TaskVector[])">
            <summary>Set task vector table</summary>
            <param name="tvt">New task vecor table</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskErrorTable(HJS.ECU.Parameter.TaskError[0:,0:])">
            <summary>Set task error table</summary>
            <param name="tet">New task error table</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskErrorLength">
            <summary>Get task error table length</summary>
            <returns>Task error table length</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskErrorNumber(System.Int32,System.Int32)">
            <summary>Get error number</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error number of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskErrorNumber(System.Int32,System.Int32,System.Byte)">
            <summary>Set error number</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="ErrorNumber">New error number</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskErrorRingFlag(System.Int32,System.Int32)">
            <summary>Get error ring flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error ring flag of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskErrorResFlag(System.Int32,System.Int32)">
            <summary>Get error reserved flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error ring flag of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskErrorRingFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error ring flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="RingFlag">New ring flag</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskErrorResFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error reserved flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="Flag">New reserved flag</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskErrorString(System.Int32,System.Int32)">
            <summary>Get task error string</summary>
            <param name="posTask">Position of task in task vector table</param>
            <param name="posError">Position of error in task</param>
            <returns>String of seven task errors, including ring marker</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskNumber">
            <summary>Get number of tasks</summary>
            <returns>Number of tasks</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemNumber(System.Int32)">
            <summary>Get task configuration item number</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <returns>Number of items of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemPosition(System.Int32,System.String)">
            <summary>Get task item position by item name</summary>
            <param name="taskPosition">Position of task in vector table</param>
            <param name="itemName">Name of task item</param>
            <returns>Position in task item table, or -1 if not found</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemName(System.Int32,System.Int32)">
            <summary>Get task item name</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Name of item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemValue(System.Int32,System.Int32)">
            <summary>Get task item value</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Value of item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.SetTaskItemValue(System.Int32,System.Int32,System.Double)">
            <summary>Set task item name</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <param name="NewValue">New value for task item</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemValueString(System.Int32,System.Int32)">
            <summary>Get task item value string</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Name of item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetTaskItemType(System.Int32,System.Int32)">
            <summary>Get task item type</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Type of item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskBaudrates">
            <summary>Check if all baudrates parametered in configuration are set to same baudrate</summary>
            <returns>True if all baudrates are same, or no baudrate set.</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskChecksums(System.Byte)">
            <summary>Check task checksums</summary>
            <param name="compatibility">Compatibility required for single task sizes</param>
            <returns>On success: 255 = invalid task, else the task identifier of first checksum mismatch</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskHeader(System.Int32@)">
            <summary>Check if all task header values are valid</summary>
            <param name="task">Output of last checked position of task</param>
            <returns>True if headers are valid</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetDatamapIds">
            <summary>Get array of data map identifiers</summary>
            <returns>Array of unsigned 32-bit-values of data map identifier</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.GetDatamapTypes">
            <summary>Get array of data map types</summary>
            <returns>Array of unsigned 32-bit-values of data map types</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskItems">
            <summary>Check task items versus palausbility</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskStackSizes">
            <summary>Check if all task stacks fit in stack array</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.AddTask(System.Byte)">
            <summary>Add an empty task to block</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ConfigurationBlock.CheckTaskErrors">
            <summary>Check if all task errors are palusible</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.DataMap">
            <summary>Single data map</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapIdentifier">
            <summary>Accessor to data map identifier</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapType">
            <summary>Accessor to data map type</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapOffset">
            <summary>Accessor to data map offset</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapDimension">
            <summary>Accessor to data map dimension</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapDataType">
            <summary>Accessor to data map data type</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapXStart">
            <summary>Accessor to data map x-axis start value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapXStepsize">
            <summary>Accessor to data map x-axis step size value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapXSteps">
            <summary>Accessor to data map x-axis number of steps</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapYStart">
            <summary>Accessor to data map y-axis start value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapYStepsize">
            <summary>Accessor to data map y-axis step size value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapYSteps">
            <summary>Accessor to data map y-axis number of steps</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapZStart">
            <summary>Accessor to data map z-axis start value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapZStepsize">
            <summary>Accessor to data map z-axis step size value</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.MapZSteps">
            <summary>Accessor to data map z-axis number of steps</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.DataMap.Data">
            <summary>Byte array of data</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.DataMap.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.DataMap.ReadData(System.Byte[])">
            <summary>Copy data from block array</summary>
            <param name="Source">Block byte array</param>
        </member>
        <member name="T:HJS.ECU.Parameter.Datamap2_Block">
            <summary>Datamap parameter block version 2</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.Datamap2_Block.NumberOfStoredDatamaps">
            <summary>Accessors for number of stored data maps
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.Datamap2_Block.ConfigVersion">
            <summary>Accessors for config. version struct
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.#ctor(HJS.Block)">
            <summary>Overloaded constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GenerateByteArray">
            <summary>Re-parse data to byte array</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetDatamapIdentifier(System.Int32)">
            <summary>Get identifier of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Identifier of map, or -1 on error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetDatamapType(System.Int32)">
            <summary>Get type of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Type of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetDimension(System.Int32)">
            <summary>Get dimension of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Dimansion of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetOffset(System.Int32)">
            <summary>Get offset of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Offset of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetStartString(System.Int32)">
            <summary>Get start values as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Start values as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetStepsizeString(System.Int32)">
            <summary>Get step sizes as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Step sizes as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetStepsString(System.Int32)">
            <summary>Get number of steps as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Number of steps as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetAxis(System.Int32,System.Int16@,System.Int16@,System.UInt16@,System.Int16@,System.Int16@,System.UInt16@,System.Int16@,System.Int16@,System.UInt16@)">
            <summary>Get axis parameters</summary>
            <param name="position">Position of data map in block</param>
            <param name="XStart">Start value of x-axis</param>
            <param name="XSize">Size of stes on x-axis</param>
            <param name="XSteps">Number of steps on x-axis</param>
            <param name="YStart">Start value of y-axis</param>
            <param name="YSize">Size of stes on y-axis</param>
            <param name="YSteps">Number of steps on y-axis</param>
            <param name="ZStart">Start value of z-axis</param>
            <param name="ZSize">Size of stes on z-axis</param>
            <param name="ZSteps">Number of steps on z-axis</param>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetDatamapValue(System.Int32,System.UInt16,System.UInt16)">
            <summary>Get value of data map cell</summary>
            <param name="position">Position of data map in block</param>
            <param name="x">Position on x-axis</param>
            <param name="y">Position on y-axis</param>
            <returns>Value of cell, or missing on error (65533)</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.SetDatamapValue(System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>Set value of data map cell</summary>
            <param name="position">Position of data map in block</param>
            <param name="x">Position on x-axis</param>
            <param name="y">Position on y-axis</param>
            <param name="Content">New content of data map cell</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.GetUsedSize(System.UInt32@,System.UInt32@)">
            <summary>Get number of used bytes in block</summary>
            <param name="gaps">Number of gapping bytes</param>
            <param name="overlapp">Number of overlapping bytes</param>
            <returns>Number of totaly used bytes</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.SetDatamapIdentifier(System.Int32,System.UInt32)">
            <summary>Set identifier of data map</summary>
            <param name="position">Position of data map in block</param>
            <param name="Id">New Identifier</param>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.SetDatamapType(System.Int32,System.Byte)">
            <summary>Set type of data map</summary>
            <param name="position">Position of data map in block</param>
            <param name="Type">New type</param>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.SetDimension(System.Int32,System.Byte)">
            <summary>Set dimension of data map</summary>
            <param name="position">Position of data map in block</param>
            <param name="Dimension">New dimension</param>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.SetAxis(System.Int32,System.Int16,System.Int16,System.UInt16,System.Int16,System.Int16,System.UInt16,System.Int16,System.Int16,System.UInt16)">
            <summary>Set axis parameters</summary>
            <param name="position">Position of data map in block</param>
            <param name="XStart">Start value of x-axis</param>
            <param name="XSize">Size of stes on x-axis</param>
            <param name="XSteps">Number of steps on x-axis</param>
            <param name="YStart">Start value of y-axis</param>
            <param name="YSize">Size of stes on y-axis</param>
            <param name="YSteps">Number of steps on y-axis</param>
            <param name="ZStart">Start value of z-axis</param>
            <param name="ZSize">Size of stes on z-axis</param>
            <param name="ZSteps">Number of steps on z-axis</param>
        </member>
        <member name="M:HJS.ECU.Parameter.Datamap2_Block.AddMap">
            <summary>Add an empty data map to block</summary>
        </member>
        <member name="T:HJS.ECU.Parameter.ParameterSet">
            <summary>Interface class for complete set of parameter blocks</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.ParameterSet.LastError">
            <summary>Accessors to last error string
            read only</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.Open(System.String)">
            <summary>Open parameter file</summary>
            <param name="Filename">Path and filename of parameter set</param>
            <returns>True on success, else see last error string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.Save(System.String)">
            <summary>Save parameter file</summary>
            <param name="Filename">Path and filename of parameter set</param>
            <returns>True on success, else see last error string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GenerateFilename">
            <summary>Generate filename from config id and date</summary>
            <returns>Suggested filename for save dialog as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CsvExport(System.String)">
            <summary>Export parameter file to CSV</summary>
            <param name="Filename">Path and filename of target file</param>
            <returns>True on success, else see last error string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.Upgrade(System.String,System.Byte)">
            <summary>Open file of former compatibility and upgrade to newer compatibility</summary>
            <param name="Filename">Filename of old version</param>
            <param name="NewVersion">New Version</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetConfigVersion">
            <summary>Get version string of configuration</summary>
            <returns>Version string of configuration</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetConfigVersion(HJS.Block.VersionT)">
            <summary>Set config and datamap version, if compatibility is matching</summary>
            <param name="newVersion">New version number</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetConfigDownwardVersion">
            <summary>Get downward compatibility of configuration to software</summary>
            <returns>Downward compatibility of configuration to software</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetConfigSoftwareType">
            <summary>Get type of useable software</summary>
            <returns>Type of useable software</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetConfigPasswordLevel">
            <summary>Get level of required password</summary>
            <returns>Level of required password</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetConfigPasswordLevel(System.Byte)">
            <summary>Set level of required password</summary>
            <param name="NewPasswordLevel">Level of required password</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetConfigCompatibility">
            <summary>Get compatibility of configuration</summary>
            <returns>Compatibility of configuration</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueGetNumber">
            <summary>Number of init value items</summary>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueGetItemName(System.Int32)">
            <summary>Get name of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Name of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueGetItemValueString(System.Int32)">
            <summary>Get value string of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueGetItemType(System.Int32)">
            <summary>Get data type of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of init value item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueGetItemValue(System.Int32)">
            <summary>Get value of init value item</summary>
            <param name="position">Position of item</param>
            <returns>Value of init value item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.InitValueSetItemValue(System.Int32,System.Double)">
            <summary>Set value of init value item</summary>
            <param name="position">Position of item</param>
            <param name="newValue">New value of init item</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetEnumerationIndex(System.Double,HJS.ECU.Parameter.TaskDataType,System.Array)">
            <summary>Get index of enumeration value in array available by GetEnumerationArray()</summary>
            <param name="EnumValue">Value of enumeration item</param>
            <param name="tdtype">Task item type</param>
            <param name="EnumArray"></param>
            <returns>Index in enumeration value array. see GetEnumerationArray</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetEnumerationArray(HJS.ECU.Parameter.TaskDataType)">
            <summary>Get array of enumeration value names of task item type</summary>
            <param name="tdtype">Task item type</param>
            <returns>Array of values or null</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanGetNumber">
            <summary>Get number of second can items</summary>
            <returns>Number of second can items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanGetItemName(System.Int32)">
            <summary>Get name of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Name of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanGetItemValueString(System.Int32)">
            <summary>Get value string of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanGetItemType(System.Int32)">
            <summary>Get data type of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of second can item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanGetItemValue(System.Int32)">
            <summary>Get value of second can item</summary>
            <param name="position">Position of item</param>
            <returns>Value of second can item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SecondCanSetItemValue(System.Int32,System.Double)">
            <summary>Set value of second can item</summary>
            <param name="position">Position of item</param>
            <param name="newValue">New value of second can item</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.ConfigDataSize">
            <summary>Get used bytes of configuration</summary>
            <returns>Used bytes of configuration</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskBaudrates">
            <summary>Check if all baudrates parametered in configuration are set to same baudrate</summary>
            <returns>True if all baudrates are same, or no baudrate set.</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskHeader(System.Int32@)">
            <summary>Check if all task header values are valid</summary>
            <param name="task">Output of last checked position of task</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GenerateChecksum">
            <summary>Generate configuration block checksum and repace sum in header</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetUsedMaps">
            <summary>Get number of used data maps</summary>
            <returns>Number of used data maps</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskItems">
            <summary>Check task items versus palausbility</summary>
            <returns>Empty string on success, else message of first mismatch found</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskStackSizes">
            <summary>Check if all task stacks fit in stack array</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskErrors">
            <summary>Check if all task errors are palusible</summary>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskNumber">
            <summary>Get number of tasks</summary>
            <returns>Number of tasks</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskIdentifier(System.Int32)">
            <summary>Get internal identifier of task</summary>
            <param name="position">Position of task in task vector table</param>
            <returns>Identifier of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskIdentifierValue(System.Int32)">
            <summary>Get value of identifier of task</summary>
            <param name="position">Position of task in task vector table</param>
            <returns>Value of identifier of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskOffset(System.Int32)">
            <summary>Get task offset</summary>
            <param name="position">Position of task in task vector table</param>
            <returns>Byte offset of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskErrorString(System.Int32,System.Int32)">
            <summary>Get task errors</summary>
            <param name="posTask">Position of task in task vector table</param>
            <param name="posError">Position of error in task</param>
            <returns>String of seven task errors, including ring marker</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskErrorNumber(System.Int32,System.Int32)">
            <summary>Get error number</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error number of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetTaskErrorNumber(System.Int32,System.Int32,System.Byte)">
            <summary>Set error number</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="ErrorNumber">New error number</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskErrorRingFlag(System.Int32,System.Int32)">
            <summary>Get error ring flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error ring flag of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetTaskErrorRingFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error ring flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="RingFlag">New ring flag</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskErrorResFlag(System.Int32,System.Int32)">
            <summary>Get error reserved flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <returns>Error ring flag of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetTaskErrorResFlag(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error reserved flag</summary>
            <param name="TaskPosition">Position of task in error table</param>
            <param name="ErrorPosition">Position of task error in table (0..6)</param>
            <param name="Flag">New ring flag</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemPosition(System.Int32,System.String)">
            <summary>Get task item position by item name</summary>
            <param name="taskPosition">Position of task in vector table</param>
            <param name="itemName">Name of task item</param>
            <returns>Position in task item table, or -1 if not found</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemNumber(System.Int32)">
            <summary>Get task configuration item number</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <returns>Number of items of task</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemName(System.Int32,System.Int32)">
            <summary>Get task item name</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Name of item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemValueString(System.Int32,System.Int32)">
            <summary>Get task item value string</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Name of item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemValue(System.Int32,System.Int32)">
            <summary>Get task item value</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Value of item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskItemType(System.Int32,System.Int32)">
            <summary>Get task item data type</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <returns>Task item data type</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetTaskItemValue(System.Int32,System.Int32,System.Double)">
            <summary>Set task item value</summary>
            <param name="taskPosition">Position of task in task vector table</param>
            <param name="itemPosition">Position of task item in task configuration</param>
            <param name="NewValue">New value of task item</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskSequence(System.String@)">
            <summary>Check task starting sequence</summary>
            <param name="ResultString">String of result</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskOffset(System.String@,System.UInt32@)">
            <summary>Check task starting offsets</summary>
            <param name="ResultString">String of result</param>
            <param name="UsedBytes">Number of used bytes</param>
            <returns>True if check was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckTaskChecksums">
            <summary>Check task checksums</summary>
            <returns>On success: 255 = invalid task
            else the task identifier of first checksum mismatch</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetTaskIdentifierArray">
            <summary>Get array of task identifiers</summary>
            <returns>Array of task identifiers</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.AddTask(System.Byte)">
            <summary>Add task to parameter set</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapVersion">
            <summary>Get version string of configuration</summary>
            <returns>Version string of configuration</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetStoredMaps">
            <summary>Get number of stored data maps</summary>
            <returns>Number of used data maps</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapIdentifier(System.Int32)">
            <summary>Get identifier of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Identifier of map, or -1 on error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckDatamapIDs(System.String@)">
            <summary>Check data map ids in config and datamaps for missing, or unneccessary ids</summary>
            <param name="resultString">Message to certify return value</param>
            <returns>True on valid datamap identifiers</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckDatamapVersion(System.String@)">
            <summary>Check data map version is same to config version</summary>
            <param name="resultString">Message to certify return value</param>
            <returns>True on valid datamap version</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetUsedSize(System.UInt32@,System.UInt32@)">
            <summary>Get number of used bytes in block</summary>
            <param name="gaps">Number of gapping bytes</param>
            <param name="overlapp">Number of overlapping bytes</param>
            <returns>Number of totaly used bytes</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapType(System.Int32)">
            <summary>Get type of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Type of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapDimension(System.Int32)">
            <summary>Get dimension of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Dimansion of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapOffset(System.Int32)">
            <summary>Get offset of data map</summary>
            <param name="position">Position of data map in block</param>
            <returns>Offset of data map</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapStartString(System.Int32)">
            <summary>Get start values as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Start values as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapStepsizeString(System.Int32)">
            <summary>Get step sizes as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Step sizes as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapStepsString(System.Int32)">
            <summary>Get number of steps as string</summary>
            <param name="position">Position of data map in block</param>
            <returns>Number of steps as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapAxis(System.Int32,System.Int16@,System.Int16@,System.UInt16@,System.Int16@,System.Int16@,System.UInt16@,System.Int16@,System.Int16@,System.UInt16@)">
            <summary>Get axis parameters</summary>
            <param name="position">Position of data map in block</param>
            <param name="XStart">Start value of x-axis</param>
            <param name="XSize">Size of stes on x-axis</param>
            <param name="XSteps">Number of steps on x-axis</param>
            <param name="YStart">Start value of y-axis</param>
            <param name="YSize">Size of stes on y-axis</param>
            <param name="YSteps">Number of steps on y-axis</param>
            <param name="ZStart">Start value of z-axis</param>
            <param name="ZSize">Size of stes on z-axis</param>
            <param name="ZSteps">Number of steps on z-axis</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetDatamapValue(System.Int32,System.UInt16,System.UInt16)">
            <summary>Get value of data map cell</summary>
            <param name="position">Position of data map in block</param>
            <param name="x">Position on x-axis</param>
            <param name="y">Position on y-axis</param>
            <returns>Value of cell, or missing on error (65533)</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetDatamapValue(System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>Set value of data map cell</summary>
            <param name="position">Position of data map in block</param>
            <param name="x">Position on x-axis</param>
            <param name="y">Position on y-axis</param>
            <param name="Content">New content of data map cell</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetDatamapId(System.Int32,System.UInt32,System.Byte,System.Byte)">
            <summary>Set data map ID an type</summary>
            <param name="position">Position of data map in block</param>
            <param name="Id">New Identifier</param>
            <param name="Type">New type</param>
            <param name="Dimension">New dimension</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetDatamapAxis(System.Int32,System.Int16,System.Int16,System.UInt16,System.Int16,System.Int16,System.UInt16,System.Int16,System.Int16,System.UInt16)">
            <summary>Set axis parameters</summary>
            <param name="position">Position of data map in block</param>
            <param name="XStart">Start value of x-axis</param>
            <param name="XSize">Size of stes on x-axis</param>
            <param name="XSteps">Number of steps on x-axis</param>
            <param name="YStart">Start value of y-axis</param>
            <param name="YSize">Size of stes on y-axis</param>
            <param name="YSteps">Number of steps on y-axis</param>
            <param name="ZStart">Start value of z-axis</param>
            <param name="ZSize">Size of stes on z-axis</param>
            <param name="ZSteps">Number of steps on z-axis</param>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.AddDataMap">
            <summary>Add an empty data map to parameter set</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetUsedLanguages">
            <summary>Get number of used languages</summary>
            <returns>Number of used languages</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetUsedLanguagesBytes(System.Int32)">
            <summary>Get number of used bytes of languages</summary>
            <param name="laguagePosition">Position in block file</param>
            <returns>Number of used bytes of languages</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetLanguageId(System.Int32)">
            <summary>Get language block identifier as string</summary>
            <param name="laguagePosition">Position in block file</param>
            <returns>String of language enumeration</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetNumberOfUsedValues(System.Int32)">
            <summary>Get number of used values</summary>
            <param name="laguagePosition">Position in block file</param>
            <returns>Number of used values</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetNumberOfUsedErrors(System.Int32)">
            <summary>Get number of used errors</summary>
            <param name="laguagePosition">Position in block file</param>
            <returns>Number of used errord</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetNumberOfUsedBehaves(System.Int32)">
            <summary>Get number of used behaves</summary>
            <param name="laguagePosition">Position in block file</param>
            <returns>Number of used behaves</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetErrorName(System.Int32,System.Int32)">
            <summary>Get name of error</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <returns>Name of error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetBehaveName(System.Int32,System.Int32)">
            <summary>Get name of behave</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="behavePosition">Position of behave</param>
            <returns>Name of behave</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueName(System.Int32,System.Int32)">
            <summary>Get Value name depending on position in value table</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>String of value name, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsValueDisplayed(System.Int32,System.Int32)">
            <summary>Get display flag for value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>true if value is displayed, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsValueHidden(System.Int32,System.Int32)">
            <summary>Get hidden flag for value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>true if value is hidden, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsValueGroup(System.Int32,System.Int32)">
            <summary>Get group flag for value
            (0 = measured value, 1=calculated value)</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>False = measured value, true = calculated value</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsValueSigned(System.Int32,System.Int32)">
            <summary>Get signed flag for value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>true if value is signed, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsValueHexadecimal(System.Int32,System.Int32)">
            <summary>Get hex flag for value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>true if value is hexadecimal, if position is greater than value array, the flag is set to false</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueDecimals(System.Int32,System.Int32)">
            <summary>Get number of decimal</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>Number of decimal</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueUnit(System.Int32,System.Int32,System.Boolean)">
            <summary>Get Value unit depending on position in value table</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="altUnit">Flag if alternative unit must be used</param>
            <returns>String of value unit, empty string on error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueFaktor(System.Int32,System.Int32)">
            <summary>Get Factor of value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>Factor of value</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueDivisor(System.Int32,System.Int32)">
            <summary>Get Divisor of value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>Divisor of value</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetValueOffset(System.Int32,System.Int32)">
            <summary>Get Offset of value</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <returns>Offset of value</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsEventDisplayed(System.Int32,System.Int32)">
            <summary>Get flag if event is shown on display</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <returns>True if event is shown on display</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsEventHidden(System.Int32,System.Int32)">
            <summary>Get flag if event is hidden</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <returns>True if event is hidden</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsEventOrError(System.Int32,System.Int32)">
            <summary>Get flag if error is only an event</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <returns>True if event only</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.IsEventBlueLed(System.Int32,System.Int32)">
            <summary>Get flag if event ligts blue led on displays</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <returns>True if event ligts blue led on displays</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueName(System.Int32,System.Int32,System.String)">
            <summary>Set value name</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueName">New value name</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueUnit(System.Int32,System.Int32,System.String)">
            <summary>Set value unit</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueUnit">New value unit</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueFactor(System.Int32,System.Int32,System.Byte)">
            <summary>Set value factor</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueFactor">New value factor</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueDivisor(System.Int32,System.Int32,System.Byte)">
            <summary>Set value divisor</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueDivisor">New value divisor</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueOffset(System.Int32,System.Int32,System.String)">
            <summary>Set value Offset</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueOffset">New value Offset</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueAltUnit(System.Int32,System.Int32,System.String)">
            <summary>Set value alternative unit</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueAltUnit">New alterantive unit</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueDisplayed(System.Int32,System.Int32,System.Boolean)">
            <summary>Set value display flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueDisplay">New value display flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>Set value hidden flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueHidden">New value hidden flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueGroup(System.Int32,System.Int32,System.Boolean)">
            <summary>Set value group flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueCalculated">Flag if value is in calculated group</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueSigned(System.Int32,System.Int32,System.Boolean)">
            <summary>Set value signed flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueSigned">New value signed flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueHex(System.Int32,System.Int32,System.Boolean)">
            <summary>Set value hex flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="valueHex">New value hex flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetValueDecimals(System.Int32,System.Int32,System.Int32)">
            <summary>Set value number of decimals</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="valuePosition">Position of value</param>
            <param name="dezStellen">New number of values deciamls</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetEventDisplayed(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error displayed flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <param name="errorDisplay">Flag if error is shown on displays</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetEventOrError(System.Int32,System.Int32,System.Boolean)">
            <summary>Set error or event flag</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <param name="errorEvent">Error or event flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetEventHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>Set hidden flag of error</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <param name="errorHidden">Hidden flag of error</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetEventBlueLed(System.Int32,System.Int32,System.Boolean)">
            <summary>Set blue LED flag of error</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <param name="errorBlueLed">Blue LED flag</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetErrorName(System.Int32,System.Int32,System.String)">
            <summary>Set name of error</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="errorPosition">Position of error</param>
            <param name="errorName">Name of error</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.SetBehaveName(System.Int32,System.Int32,System.String)">
            <summary>Set name of behave</summary>
            <param name="laguagePosition">Position in block file</param>
            <param name="behavePosition">Position of behave</param>
            <param name="behaveName">Behave name</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckLanguageFlags">
            <summary>Check languages by comparing value and event flags</summary>
            <returns>Empty string on success, else message of first mismatch found</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.CheckLanguageSignedFlags">
            <summary>Check languages by comparing value signed flags</summary>
            <returns>Empty string on success, else message of first mismatch found</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.HasAuthorBlock">
            <summary>Flag if parameter set includes an author block</summary>
            <returns>True, if author block is included</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetAuthorCreationTime">
            <summary>Get time stamp of file creation</summary>
            <returns>Time stamp of file creation</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetAuthorComputername">
            <summary>Get computer name of author</summary>
            <returns>Computer name of author</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetAuthorUsername">
            <summary>Get user name of author</summary>
            <returns>User name of author</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.HasReportBlock">
            <summary>Flag if parameter set includes an report block</summary>
            <returns>True, if report block is included</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetReportItemNumber">
            <summary>Get number of report items</summary>
            <returns>Number of report items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetReportItemName(System.Int32)">
            <summary>Get name of report item</summary>
            <param name="Position">Position of report item</param>
            <returns>Name of report item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.ParameterSet.GetReportItemValue(System.Int32)">
            <summary>Get value of report item</summary>
            <param name="Position">Position of report item</param>
            <returns>Value of report item</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.TaskConfiguration">
            <summary>Base class of task configuration</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskConfiguration.mData">
            <summary>Data byte array</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskConfiguration.mTaskIdentifierNumber">
            <summary>Task identifier</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskConfiguration.mItem">
            <summary>Configuration items</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskConfiguration.mCrc16Table">
            <summary>Table of CRC-16 Polynomial (0x8005) for byte wise usage</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.#ctor(HJS.ECU.TaskIdentifier)">
            <summary>default constuctor</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GenerateChecksum(System.Byte)">
            <summary>Generate CRC16 checksum</summary>
            <param name="compatibility">Compatibility required for single task sizes</param>
            <returns>Checksum, or 0xFFFF on error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetChecksum">
            <summary>Get checksum stored in data / header</summary>
            <returns>16-bit-checksum from memory</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.SetChecksum(System.Byte)">
            <summary>Generate and set task checksum</summary>
            <param name="compatibility">Compatibility required for single task sizes</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetTaskId">
            <summary>Get identifier of task</summary>
            <returns>Task name</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.Import8(System.UInt16,System.Byte[]@)">
            <summary>Import task items from byte array for compatibility 8</summary>
            <param name="Offset">Offset of task data in byte array</param>
            <param name="Data">Reference to configuration block byte array</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.Import9(System.UInt16,System.Byte[]@)">
            <summary>Import task items from byte array for compatibility 9</summary>
            <param name="Offset">Offset of task data in byte array</param>
            <param name="Data">Reference to configuration block byte array</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.Import10(System.UInt16,System.Byte[]@)">
            <summary>Import task items from byte array for compatibility 10</summary>
            <param name="Offset">Offset of task data in byte array</param>
            <param name="Data">Reference to configuration block byte array</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetNumber">
            <summary>Number of task items</summary>
            <returns>Number of task items</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetItemName(System.Int32)">
            <summary>Get name of task item</summary>
            <param name="position">Position of item</param>
            <returns>Name of task item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetItemValue(System.Int32)">
            <summary>Get value of task item</summary>
            <param name="position">Position of item</param>
            <returns>Value of task item as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.SetItemValue(System.Int32,System.Double)">
            <summary>Set value of task item</summary>
            <param name="position">Position of item</param>
            <param name="NewValue">New Value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetItemValueString(System.Int32,System.Byte)">
            <summary>Get value string of task item</summary>
            <param name="position">Position of item</param>
            <param name="Compatibility">Compatibility of firmware</param>
            <returns>Value of task item as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetItemType(System.Int32)">
            <summary>Get data type of task item</summary>
            <param name="position">Position of item</param>
            <returns>Data type of task item</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.GetByteUsage(System.Byte)">
            <summary>Get bytes used by task compatible to configuration version</summary>
            <param name="ConfigVersion">Compatibility of task</param>
            <returns>Number of used task bytes, or 0 on any error</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfiguration.CheckItems(System.Byte)">
            <summary>Check task items versus palausbility</summary>
            <param name="ConfigVersion">Compatibility of task</param>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="T:HJS.ECU.Parameter.TaskDataType">
            <summary>Configuration data type</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_uint_8">
            <summary>Data type for 8-Bit unsigned</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_int_8">
            <summary>Data type for 8-Bit signed</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_uint_16">
            <summary>Data type for 16-Bit unsigned</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_int_16">
            <summary>Data type for 16-Bit signed</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_uint_32">
            <summary>Data type for 32-Bit unsigned</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_int_32">
            <summary>Data type for 32-Bit signed</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_float_32">
            <summary>Data type for float 32-Bit</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_can_id_32">
            <summary>Data type for can identifier</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_enum_mrw_8">
            <summary>Data type for measurement value</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_kf_id_32">
            <summary>Data type for datamap identifier</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_kf_type_8">
            <summary>Data type for datamap identifier</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_hex_8">
            <summary>Data type for 8-Bit hexadecimal value</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_hex_16">
            <summary>Data type for 16-Bit hexadecimal value</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_hex_32">
            <summary>Data type for 32-Bit hexadecimal value</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_psoc_gain_8">
            <summary>Data type for gain amplification identifier for PSoC</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_tank_signal_8">
            <summary>Data type for fuel sensor signal type</summary>
        </member>
        <member name="F:HJS.ECU.Parameter.TaskDataType.type_can_baudrate_8">
            <summary>Data type for can baudrate identifier</summary>
        </member>
        <member name="T:HJS.ECU.Parameter.TaskConfigurationItem">
            <summary>Configuration item</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.TaskConfigurationItem.Name">
            <summary>Accessors for name
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.TaskConfigurationItem.DataType">
            <summary>Accessors for data type
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Parameter.TaskConfigurationItem.Offset">
            <summary>Accessors for data item offsets
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.#ctor(System.String,HJS.ECU.Parameter.TaskDataType,System.UInt16)">
            <summary>Constructor</summary>
            <param name="name">Item name</param>
            <param name="type">Item data type</param>
            <param name="offset">Offset in task data</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.GetValue(System.Byte[]@)">
            <summary>Get value</summary>
            <param name="Data">Reference to task byte array</param>
            <returns>value as double</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.SetValue(System.Byte[]@,System.Double)">
            <summary>Set value</summary>
            <param name="Data">Reference to task byte array</param>
            <param name="NewValue">New value to be set</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.GetValueString(System.Byte[]@,System.Byte)">
            <summary>Get value</summary>
            <param name="Data">Reference to task byte array</param>
            <param name="Compatibility">Compatibility of firmware</param>
            <returns>value as string</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.SetPlausibilityMin(System.Double)">
            <summary>Set mimimum plausiblity of task item</summary>
            <param name="minimum">Mimimum plausiblity value</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.SetPlausibilityMax(System.Double)">
            <summary>Set maximum plausiblity of task item</summary>
            <param name="maximum">Maximum plausiblity value</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.CheckValue(System.Byte[]@,System.Byte)">
            <summary>Check items versus palausbility</summary>
            <param name="Data">Reference to data byte array</param>
            <param name="Compatibility">Compatibility of task</param>
            <returns>Empty string on success, else error text</returns>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.AllowDataMapType(HJS.ECU.Firmware.KennfeldTyp)">
            <summary>Allow data map type</summary>
            <param name="type">Allowed data map type</param>
        </member>
        <member name="M:HJS.ECU.Parameter.TaskConfigurationItem.IsDataMapTypeValid(HJS.ECU.Firmware.KennfeldTyp)">
            <summary>Check if data map type is valid for task item</summary>
            <param name="type">Required typ</param>
            <returns>True if required type is valid for task item</returns>
        </member>
        <member name="T:HJS.ECU.Port.Comm">
            <summary>Interface to port object</summary>
        </member>
        <member name="T:HJS.ECU.Port.Comm.StatusByte">
            <summary>Enumeration for protocol status byte contents</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.NoError">
            <summary>No error in communication</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.NoDecive">
            <summary>Status No 2nd Flash device 0x78</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.ModeFailed">
            <summary>Status ECU mode does not match STB 0x79</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.ChecksumError">
            <summary>Status CRC16 error 0x7A</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.OrderFailed">
            <summary>Status Could not execute STB 0x7B</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.PasswordError">
            <summary>Status Password error 0x7C</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.VersionError">
            <summary>Status RS232 Protocol error 0x7D</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.UnknownOrder">
            <summary>Status Unknown STB 0x7E</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.StatusByte.SyncError">
            <summary>Status Un synchronous (1. 10Byte wrong) 0x7F</summary>
        </member>
        <member name="T:HJS.ECU.Port.Comm.OrderByte">
            <summary>Enumeration for orders (formally known as STB)</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.Invalid">
            <summary>Null enumeration, invalid command</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.GetCompatibility">
            <summary>Read compatibility information</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadMeasuresOnly">
            <summary>Read measurement values</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadCalculatedOnly">
            <summary>Read calculated values</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.Reboot">
            <summary>Reboot ECU</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteConfiguration">
            <summary>Write configuration</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetInitBlockWriting">
            <summary>initilize block writing</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteBlock">
            <summary>Write parameter block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadBlock">
            <summary>Read block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadDTCIds">
            <summary>Read DTC identifiers</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadConfiguration">
            <summary>Read configuration</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadActualValues">
            <summary>Read values (measurement and calculated)</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.Alive">
            <summary>Check communication</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadErrorRing">
            <summary>Read error ring</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadErrorRingSector">
            <summary>Read error ring sector</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteCfgKf">
            <summary>Write configuration and datamap</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquiDev1Sector">
            <summary>Read acquisition sector from device 1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquiDev2Sector">
            <summary>Read acquisition sector from device 2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadBehavior">
            <summary>Read behavior</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadInfoText">
            <summary>Read info string</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteFree">
            <summary>Write block free1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadLanguage">
            <summary>read language</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteFree2">
            <summary>Write block free2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadErrorStack">
            <summary>Read error stack</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteKWPBuffer">
            <summary>Write KWP2000 buffer</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadDataMap">
            <summary>Read data map</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteDataMap">
            <summary>Write data map</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadInfoBlock">
            <summary>Read digital information block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteLanguageDe">
            <summary>Write german language</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteLanguageEn">
            <summary>Write english language</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteLanguageFr">
            <summary>Write french Language</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteLanguageIt">
            <summary>Write italian language</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ResetErrorRing">
            <summary>Delete error ring data</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ResetAcquisition">
            <summary>Delete acquisition data</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadBehaveToggleRing">
            <summary>Read behave ring</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadRealTimeClockData">
            <summary>Read real time clock data</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_01">
            <summary>Read acquisition data 1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_02">
            <summary>Read acquisition data 2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_03">
            <summary>Read acquisition data 3</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_04">
            <summary>Read acquisition data 4</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_05">
            <summary>Read acquisition data 5</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_06">
            <summary>Read acquisition data 6</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_07">
            <summary>Read acquisition data 7</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_08">
            <summary>Read acquisition data 8</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_09">
            <summary>Read acquisition data 9</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_10">
            <summary>Read acquisition data 10</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_11">
            <summary>Read acquisition data 11</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_12">
            <summary>Read acquisition data 12</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_13">
            <summary>Read acquisition data 13</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.CheckFlash2ndDevice">
            <summary>Check second device assembled</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadEmpiricalValues">
            <summary>Read empirical data</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadRingInfo">
            <summary>Read acquisition and error ring definitions and info</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetAdditiveRefilled">
            <summary>Set additive refilled</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetTurnScale">
            <summary>Calibrate rpm</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetTime">
            <summary>Set time</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ResetErrors">
            <summary>Delete errors</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ResetMaster">
            <summary>Master reset</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetDosingPulses">
            <summary>Set dosing pulses</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartRegeneration">
            <summary>Start regeneration</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetFilterChanged">
            <summary>Set filter changed</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetEGRToggle">
            <summary>Toggle EGR</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartPressureMeasurement">
            <summary>Start pressure averaging</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetWarningPressure">
            <summary>Set warning level pressure</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetAlarmPressure">
            <summary>Set alarm level pressure</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetAlarmTimeDelay">
            <summary>Set alarm level time</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetFuelSensorAmplifier">
            <summary>Calibrate fuel sensor gain</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartHeating">
            <summary>Start heater</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.EraseSaveBlock">
            <summary>Erase secured block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ProdEOS">
            <summary>Set EOS</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ProdLMM">
            <summary>Set LMM</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ProdToggleTank">
            <summary>Toggle fuel sensor</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ProdHeat">
            <summary>Set heater values</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetSerialNumber">
            <summary>Set serial number</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ProdSBC_WUR_INTR">
            <summary>Set SBC</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetTemperatureCalibration">
            <summary>Calibrate ambient temperature sensor</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ResetDrivePatternDetection">
            <summary>Delete drive pattern</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteDrivePatternDetection1">
            <summary>Write drive pattern 1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteDrivePatternDetection2">
            <summary>Write drive pattern 2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteValue1">
            <summary>Write empirical values 1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteValue2">
            <summary>write empirical values 2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteBehaveRing1">
            <summary>Write behave ring 1</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteBehaveRing2">
            <summary>Write behave ring 2</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteBehaveRing3">
            <summary>Write behave ring 3</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.WriteSaveBlock">
            <summary>Write secured block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_14">
            <summary>Read acquisition data 14</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_15">
            <summary>Read acquisition data 15</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_16">
            <summary>Read acquisition data 16</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_17">
            <summary>Read acquisition data 17</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_18">
            <summary>Read acquisition data 18</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_19">
            <summary>Read acquisition data 19</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_20">
            <summary>Read acquisition data 20</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_21">
            <summary>Read acquisition data 21</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_22">
            <summary>Read acquisition data 22</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_23">
            <summary>Read acquisition data 23</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_24">
            <summary>Read acquisition data 24</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_25">
            <summary>Read acquisition data 25</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_26">
            <summary>Read acquisition data 26</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_27">
            <summary>Read acquisition data 27</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_28">
            <summary>Read acquisition data 28</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadAcquisitionSector_29">
            <summary>Read acquisition data 29</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.EraseDTC">
            <summary>Delete DTC</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadDTC">
            <summary>Read DTC</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartPressureSensorCalibration">
            <summary>Calibrate differential pressure sensor</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartAmbientPressureSensorCalibration">
            <summary>Calibrate ambient pressure sensor</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadLanguageMask">
            <summary>Read Mask with availabe Languages</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.StartVenturiSensorCalibration">
            <summary>Calibrate Venturi pressure sensor</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetWarningTimeDelay">
            <summary>Set warning level time</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.SetUpdatableValue">
            <summary>Set updatable empirical value</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadUpdatables">
            <summary>Read updatable empirical values</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.IsTaskActive">
            <summary>Check if task ist started on ECU</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.ReadReportBlock">
            <summary>Read report block</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterDetectEcu">
            <summary>Tester detect ECU</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterVersion">
            <summary>Tester read version</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterLockState">
            <summary>Tester set lock</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterEjectEcu">
            <summary>Tester eject</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterSendUdaCyclic">
            <summary>Tester send cyclic UDA CAN messages</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterOutputs">
            <summary>Tester set outputs</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterFlash">
            <summary>Tester enable flashing</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterNoFlash">
            <summary>Tester disable flashing</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.OrderByte.TesterTemperature">
            <summary>Read tester temperature</summary>
        </member>
        <member name="T:HJS.ECU.Port.Comm.PortType">
            <summary>Enumeration for type of port</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.PortType.Direct">
            <summary>Direct communication with RS232</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.PortType.Modem">
            <summary>Indirect communication with modem</summary>
        </member>
        <member name="T:HJS.ECU.Port.Comm.ServerByte">
            <summary>Server identification</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.ServerByte.Invalid">
            <summary>Null enumeration</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.ServerByte.Diagnostics">
            <summary>Diagnistics</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.ServerByte.Production">
            <summary>Production</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.ServerByte.Display">
            <summary>Display</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.mVersion">
            <summary>Protocol version</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.mPortName">
            <summary>Name of current serial port</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.mServer">
            <summary>Identifier of server</summary>
        </member>
        <member name="F:HJS.ECU.Port.Comm.mKey">
            <summary>ECU keyword</summary>
        </member>
        <member name="P:HJS.ECU.Port.Comm.pVersion">
            <summary>Accessors for current protocol version
            Get from header to PC or set to header to ECU</summary>
        </member>
        <member name="P:HJS.ECU.Port.Comm.PortName">
            <summary>Accessors for string of current port name</summary>
        </member>
        <member name="P:HJS.ECU.Port.Comm.Server">
            <summary>Accessors for server identification (100 = d, or 112 = p)</summary>
        </member>
        <member name="P:HJS.ECU.Port.Comm.Checksum">
            <summary>Checksum of last received communication</summary>
        </member>
        <member name="P:HJS.ECU.Port.Comm.TimeStamp">
            <summary>Timestamp</summary>
        </member>
        <member name="M:HJS.ECU.Port.Comm.SetKey(System.Byte[])">
            <summary>Accessors for Keyword
            Write only</summary>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Connect">
            <summary>Open connection to ECU</summary>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Disconnect">
            <summary>Close Connection to ECU</summary>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Read(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@)">
            <summary>Read data from ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">Target data byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Read(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.Byte[]@)">
            <summary>Override Read data from ECU with value for Size parameter</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Special value to be send in Size parameter</param>
            <param name="Data">Target data byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Read(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@,System.UInt16)">
            <summary>Read data from ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">Target data byte array</param>
            <param name="ExecutionTime">Wait execution time of ECU in ms</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Order(HJS.ECU.Port.Comm.OrderByte)">
            <summary>Send an order to ECU</summary>
            <param name="STB">Communication order identifier</param>
            <returns>0 on success, else error (see ReturnValue)</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Order(HJS.ECU.Port.Comm.OrderByte,System.UInt16)">
            <summary>Send an order with an 16-bit-value to ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Special value to be send in Size parameter</param>
            <returns>0 on success, else error (see ReturnValue)</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Order(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.UInt16)">
            <summary>Send an order to ECU with an 16-bit-value and wait for ECU to execute command</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Special value to be send in Size parameter</param>
            <param name="ExecutionTime">Wait execution time of ECU in ms</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.Write(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.Byte[]@,System.UInt16)">
            <summary>Write data to ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Parameter or size of data</param>
            <param name="Data">BYte array of data</param>
            <param name="ExecutionTime">Execution time between sending request and response</param>
            <returns>0 on success, else error (see ReturnValue)</returns>
        </member>
        <member name="M:HJS.ECU.Port.Comm.EraseAndWrite(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@,System.UInt16,System.UInt16)">
            <summary>Write data to ECU after erasing target area</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">BYte array of data</param>
            <param name="ExecutionTime">Execution time between sending request and response</param>
            <param name="EraseTime">Time required for erasing between sending header and sending data</param>
            <returns>0 on success, else error (see ReturnValue)</returns>
        </member>
        <member name="T:HJS.ECU.Port.SerialDirect">
            <summary>Serial communication object class</summary>
        </member>
        <member name="P:HJS.ECU.Port.SerialDirect.Size">
            <summary>Accessors for Size of data (or value of order)</summary>
        </member>
        <member name="P:HJS.ECU.Port.SerialDirect.Checksum">
            <summary>Accessors for checksum of last received communication
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Port.SerialDirect.TimeStamp">
            <summary>Accessors for time stamp of last received communication
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.#ctor(System.String,System.Byte,System.Byte[],System.Byte[])">
            <summary>Overloaded constructor</summary>
            <param name="strPortName">Name of new serial port</param>
            <param name="ucVersion">Version of protocol</param>
            <param name="ucaKey">Byte array of new ECU key</param>
            <param name="ucaClient">Byte array of client identifier</param>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Dispose(System.Boolean)">
            <summary>Dispose of managed and native resouces</summary>
            <param name="disposing">True if managed members should be disposed</param>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Dispose">
            <summary>Dispose of instantiable members</summary>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Connect">
            <summary>Open connection to ECU</summary>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Disconnect">
            <summary>Close Connection to ECU</summary>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Write(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.Byte[]@,System.UInt16)">
            <summary>Write data to ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Size of data or parameter</param>
            <param name="Data">Source data byte array</param>
            <param name="ExecutionTime">Execution time between sending request and response</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.EraseAndWrite(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@,System.UInt16,System.UInt16)">
            <summary>Write data to ECU after erasing target area</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">Byte array of data</param>
            <param name="ExecutionTime">Execution time between sending request and response</param>
            <param name="EraseTime">Time required for erasing between sending header and sending data</param>
            <returns>0 on success, else error (see ReturnValue)</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Read(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@)">
            <summary>Read data from ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">Target data byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Read(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.Byte[]@)">
            <summary>Override Read data from ECU with value for Size parameter</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Special value to be send in Size parameter</param>
            <param name="Data">Target data byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Order(HJS.ECU.Port.Comm.OrderByte)">
            <summary>Send an order to ECU</summary>
            <param name="STB">Communication order identifier</param>
            <returns>0 on success, else error (see ErrorByte)</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Order(HJS.ECU.Port.Comm.OrderByte,System.UInt16)">
            <summary>Override of sending order to ECU with an 16-bit-value</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Value of order</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Order(HJS.ECU.Port.Comm.OrderByte,System.UInt16,System.UInt16)">
            <summary>Override of sending order to ECU with an 16-bit-value
            and wait for ECU to execute command</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Value">Value of order</param>
            <param name="ExecutionTime">Wait execution time of ECU in ms</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.Read(HJS.ECU.Port.Comm.OrderByte,System.Byte[]@,System.UInt16)">
            <summary>Read data from ECU</summary>
            <param name="STB">Communication order identifier</param>
            <param name="Data">Target data byte array</param>
            <param name="ExecutionTime">Wait execution time of ECU in ms</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mComPort">
            <summary>Serial port object</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.SYNC_0">
            <summary>First synchronization byte (0x55 = 01010101b)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.SYNC_1">
            <summary>Second synchronization byte (0xAA = 10101010b)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.SYNC_2">
            <summary>Third synchronization byte (0x55 = 01010101b)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mClient">
            <summary>Identifier of client ("HJS-ECU", or "TESTER ")</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mSizeLowByte">
            <summary>Size (low byte of 16-Bit-Value)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mSizeHighByte">
            <summary>Size (high byte of 16-Bit-Value)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mOrder">
            <summary>Current order byte</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mChecksumLowByte">
            <summary>Checksum of last received communication (low byte of 16-Bit-Value)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mChecksumHighByte">
            <summary>Checksum of last received communication (high byte of 16-Bit-Value)</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mTimeStamp0">
            <summary>First byte of time stamp of last communication</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mTimeStamp1">
            <summary>Second byte of time stamp of last communication</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mTimeStamp2">
            <summary>Third byte of time stamp of last communication</summary>
        </member>
        <member name="F:HJS.ECU.Port.SerialDirect.mTimeStamp3">
            <summary>Fourth byte of time stamp of last communication</summary>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.writeHeader(HJS.ECU.Port.Comm.OrderByte)">
            <summary>Write header to ECU</summary>
            <param name="STB">Order byte</param>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.waitForSync">
            <summary>Synchronize receiving header from ECU</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Port.SerialDirect.readHeader">
            <summary>Receive rest of header (without sync. bytes)</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="T:HJS.ECU.ProductionDataBlock">
            <summary>Block of production data</summary>
        </member>
        <member name="P:HJS.ECU.ProductionDataBlock.ProductionDate">
            <summary>Accessors for ECU production date</summary>
        </member>
        <member name="P:HJS.ECU.ProductionDataBlock.SerialNumber">
            <summary>Accessors for ECU serial number</summary>
        </member>
        <member name="P:HJS.ECU.ProductionDataBlock.TempertureOffset">
            <summary>Accessors for ECU environmental temperature offset</summary>
        </member>
        <member name="M:HJS.ECU.ProductionDataBlock.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:HJS.ECU.ProductionDataBlock.SetData(System.UInt32,System.Int32)">
            <summary>Set Production data, date is now</summary>
            <param name="serialNumber">Serial number of ECU</param>
            <param name="temperature">Temperature</param>
        </member>
        <member name="T:HJS.ECU.Protocol.Protocol14">
            <summary>Protocol version 14</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.#ctor(System.String,System.Byte[],HJS.ECU.Port.Comm.PortType)">
            <summary>Overloaded constructor</summary>
            <param name="strPortName">Name of new serial port</param>
            <param name="ucaKey">Byte array of new ECU key</param>
            <param name="ConnectionType">Type of connection</param>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.Connect(HJS.ECU.Protocol.ProtocolBase.LanguageId)">
            <summary>Connect to ECU</summary>
            <param name="language">Language: 0=german, 1=english, 2=french, 3=italian</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.FastConnect">
            <summary>Connect to ECU without reading language!</summary>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.MasterReset">
            <summary>Execute master reset</summary>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.WriteProductionData(System.Byte[]@)">
            <summary>Write production data (SN, date, temperature)</summary>
            <param name="Data">Byte array of production data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetEcuTemperatureOffset">
            <summary>Get temperature offset from production data block</summary>
            <returns>Current temperature offset</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadReportBlock(HJS.Block@)">
            <summary>Read report block from ecu</summary>
            <param name="Report">Reference to target block</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.Reboot(HJS.ECU.Protocol.ProtocolBase.RebootMode)">
            <summary>Reboot ecu</summary>
            <param name="Mode">Mode of reboot</param>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.EraseParamBlocks">
            <summary>Delete parameter blocks</summary>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.WriteParamBlock(HJS.Block@)">
            <summary>Write parameter block</summary>
            <param name="ParameterBlock">Reference to source block</param>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadParamBlock(HJS.Block.BlockId,HJS.Block@)">
            <summary>Read parameter block from ecu</summary>
            <param name="Identifier">Block identifier</param>
            <param name="ParameterBlock">Referece of block to read to</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.CheckLanguageChecksum(HJS.Block.BlockId,System.UInt16)">
            <summary>Check checksum of language</summary>
            <param name="Language">Language identifier</param>
            <param name="Checksum">Checksum</param>
            <returns>True if checksum matches</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadAcquisitionData(System.UInt16,System.Byte[]@)">
            <summary>Read one flash block (32kByte) of acquisition raw data</summary>
            <param name="Position">Position of acquisition data in ring</param>
            <param name="Data">Target byte array for flash data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadErrorRing(System.Byte,System.Byte[]@)">
            <summary>Read error history ring data unit</summary>
            <param name="Position">Position of data unit in ring</param>
            <param name="Data">Target byte array of error ring data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadRtc">
            <summary>Read rtc data</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetNumberOfVolatiles">
            <summary>Get number of volatiles values</summary>
            <returns>Number of volatiles values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetVolatileValue(System.UInt16)">
            <summary>Get volatile value as string</summary>
            <param name="Position">Position of volatile value</param>
            <returns>Volatile value as string</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadEmpiricals">
            <summary>Read empirical data</summary>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetEmpiricalGroupNames(System.String[]@)">
            <summary>Get empirical group names</summary>
            <param name="GroupNames">Position of group</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetNumberOfEmpiricalValues(HJS.ECU.EmpiricalDataBlock.GroupName)">
            <summary>Get number of empirical values</summary>
            <param name="Group">Enumeration of group</param>
            <returns>Number of values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetEmpiricalValue(System.UInt16,System.UInt16)">
            <summary>Get empirical value string</summary>
            <param name="GroupPosition">Position of group</param>
            <param name="ValuePosition">Position of value</param>
            <returns>String with name and value</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadDtc(System.Byte[]@)">
            <summary>Read DTC data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadDtcTable(System.Byte[]@)">
            <summary>Read DTC assignement table</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.SendOrder(HJS.ECU.Port.Comm.OrderByte,System.UInt16)">
            <summary>Send order to ecu</summary>
            <param name="Order">Enumeration of order</param>
            <param name="Value">Value of order</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadUpdatables(System.Byte[]@)">
            <summary>Read updatable empirical data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.SetUpdatable(System.UInt16,System.Byte[])">
            <summary>Set updatable empirical value</summary>
            <param name="Position">Position of updatable empirical value</param>
            <param name="Data">Source byte array. Size MUST be 4 bytes</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetEmpiricalDataBlock">
            <summary>Get block of empirical data</summary>
            <returns>Block of empirical data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.GetVolatileValueBlock">
            <summary>Get block of volatile data</summary>
            <returns>Block of volatile data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.ReadLanguageMask(System.Byte[]@)">
            <summary>Read language mask</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol14.IsTaskActive(System.Byte)">
            <summary>Check if task is active</summary>
            <param name="taskIdentifier">Identifier of task</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="T:HJS.ECU.Protocol.Protocol15">
            <summary>Protocol Version 15</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.Protocol15.mRtcData">
            <summary>Real time clock data</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.Protocol15.mEmpData">
            <summary>Empirical data</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.#ctor(System.String,System.Byte[],HJS.ECU.Port.Comm.PortType)">
            <summary>Overloaded constructor</summary>
            <param name="strPortName">Name of new serial port</param>
            <param name="ucaKey">Byte array of new ECU key</param>
            <param name="ConnectionType">Type of connection</param>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.Connect(HJS.ECU.Protocol.ProtocolBase.LanguageId)">
            <summary>Connect to ECU</summary>
            <param name="language">Language: 0=german, 1=english, 2=french, 3=italian</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.FastConnect">
            <summary>Connect to ECU without reading language!</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.Reboot(HJS.ECU.Protocol.ProtocolBase.RebootMode)">
            <summary>Reboot ECU</summary>
            <param name="Mode">Mode of reboot</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.MasterReset">
            <summary>Reset all empirical values and erase all flash ring memory </summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.WriteProductionData(System.Byte[]@)">
            <summary>Write production data (SN, date, temperature)</summary>
            <param name="Data">Byte array of production data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetEcuTemperatureOffset">
            <summary>Get temperature offset from production data block</summary>
            <returns>Current temperature offset</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadReportBlock(HJS.Block@)">
            <summary>Read report block from ecu</summary>
            <param name="Report">Reference to target block</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.EraseParamBlocks">
            <summary>Erase blocks in ECU flash for parameters</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.WriteParamBlock(HJS.Block@)">
            <summary> Write parameter block to ECU</summary>
            <param name="ParameterBlock">Reference of parameter block</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadParamBlock(HJS.Block.BlockId,HJS.Block@)">
            <summary>Read parameter block from ecu</summary>
            <param name="Identifier">Block identifier</param>
            <param name="ParameterBlock">Referece of block to read to</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.CheckLanguageChecksum(HJS.Block.BlockId,System.UInt16)">
            <summary>Read language and check checksum</summary>
            <param name="Language">Language identifier</param>
            <param name="Checksum">Reference checksum</param>
            <returns>True is language is loaded and checksums matching</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadAcquisitionData(System.UInt16,System.Byte[]@)">
            <summary>Read one flash block (32kByte) of acquisition raw data</summary>
            <param name="Position">Position of acquisition data in ring</param>
            <param name="Data">Target byte array for flash data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadErrorRing(System.Byte,System.Byte[]@)">
            <summary>Read error history ring data unit</summary>
            <param name="Position">Position of data unit in ring</param>
            <param name="Data">Target byte array of error ring data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadRtc">
            <summary>Read rtc data</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetNumberOfVolatiles">
            <summary>Get number of volatiles values</summary>
            <returns>Number of volatiles values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetVolatileValue(System.UInt16)">
            <summary>Get volatile value as string</summary>
            <param name="Position">Position of volatile value</param>
            <returns>Volatile value as string</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadEmpiricals">
            <summary>Read empirical data</summary>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetNumberOfEmpiricalValues(HJS.ECU.EmpiricalDataBlock.GroupName)">
            <summary>Get number of empirical values</summary>
            <param name="Group">Enumeration of group</param>
            <returns>Number of values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetEmpiricalGroupNames(System.String[]@)">
            <summary>Get empirical group names</summary>
            <param name="GroupNames">Position of group</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetEmpiricalValue(System.UInt16,System.UInt16)">
            <summary>Get empirical value string</summary>
            <param name="GroupPosition">Position of group</param>
            <param name="ValuePosition">Position of value</param>
            <returns>String with name and value</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadDtc(System.Byte[]@)">
            <summary>Read DTC data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadDtcTable(System.Byte[]@)">
            <summary>Read DTC assignement table</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.SendOrder(HJS.ECU.Port.Comm.OrderByte,System.UInt16)">
            <summary>Send order to ecu</summary>
            <param name="Order">Enumeration of order</param>
            <param name="Value">Value of order</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadUpdatables(System.Byte[]@)">
            <summary>Read updatable empirical data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.SetUpdatable(System.UInt16,System.Byte[])">
            <summary>Set updatable empirical value</summary>
            <param name="Position">Position of updatable empirical value</param>
            <param name="Data">Source byte array. Size MUST be 4 bytes</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetEmpiricalDataBlock">
            <summary>Get block of empirical data</summary>
            <returns>Block of empirical data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.GetVolatileValueBlock">
            <summary>Get block of volatile data</summary>
            <returns>Block of volatile data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.ReadLanguageMask(System.Byte[]@)">
            <summary>Read language mask</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.Protocol15.IsTaskActive(System.Byte)">
            <summary>Check if task is active</summary>
            <param name="taskIdentifier">Identifier of task</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="T:HJS.ECU.Protocol.ProtocolBase">
            <summary>Abstact base class for protocols</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.MAX_READ_BUFFER_SIZE">
            <summary>Maximum size of data that can be received by one communication</summary>
        </member>
        <member name="T:HJS.ECU.Protocol.ProtocolBase.LanguageId">
            <summary>Enumeration for supported languages</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.German">
            <summary>Identifier for german language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.English">
            <summary>Identifier for english language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.French">
            <summary>Identifier for french language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.Italian">
            <summary>Identifier for italian language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.Spanish">
            <summary>Identifier for spanish language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.Polish">
            <summary>Identifier for polish language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.Dutch">
            <summary>Identifier for dutch language</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.LanguageId.Turkish">
            <summary>Identifier for turkish language</summary>
        </member>
        <member name="T:HJS.ECU.Protocol.ProtocolBase.RebootMode">
            <summary>Enumeration for reboot modes</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.RebootMode.RebootNormal">
            <summary>Boot in normal configuration</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.RebootMode.RebootNotConfig">
            <summary>Boot in emergency configuration</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.RebootMode.ReconfigReset">
            <summary>Reset reconfigurable values and reboot</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mLocalTime">
            <summary>Flag for display time format</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.LocalTime">
            <summary>Accessors for display time format flag</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mVersion">
            <summary>Version of this protocol</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.ProtocolVersion">
            <summary>Accessors for protocol version
            Read only</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mEcu">
            <summary>Communication object for Serial access to ECU</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mInfo">
            <summary>Object of digital information block</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mBusy">
            <summary>Semaphore for locking during active communication</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mLanguage">
            <summary>Object of active language block</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.ProtocolBase.mFirmware">
            <summary>Object of ECU software dependencies</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.#ctor(System.String,System.Byte[],HJS.ECU.Port.Comm.PortType)">
            <summary>Overloaded constructor</summary>
            <param name="strPortName">Name of new serial port</param>
            <param name="ucaKey">Byte array of new ECU key</param>
            <param name="ConnectionType">Enumeration of connection type</param>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.Connect(HJS.ECU.Protocol.ProtocolBase.LanguageId)">
            <summary>Connect to ECU</summary>
            <param name="language">Language: 0=german, 1=english, 2=french, 3=italian</param>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.FastConnect">
            <summary>Connect to ECU without reading language!</summary>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.Disconnect">
            <summary>Disconnect from ECU</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ChangePort(System.String)">
            <summary>Change port name
            A connection is disconnected, but not reconnected after changing port name</summary>
            <param name="NewPortName">New port name</param>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ChangeServer(HJS.ECU.Port.Comm.ServerByte)">
            <summary>Change server identfication</summary>
            <param name="NewServer">New server identification</param>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ChangeKey(System.Byte[])">
            <summary>Change password</summary>
            <param name="key">New password</param>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetLastTimeStamp">
            <summary>Get last communication time stamp</summary>
            <returns>Minutes since programming of last communication time stamp</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetLastChecksum">
            <summary>Get checksum of last received communication</summary>
            <returns>Checksum of last received communication</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.SetTime(System.DateTime)">
            <summary>Set ecu time</summary>
            <param name="NewTime">Date time object of new ecu time</param>
            <returns>True in success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.Reboot(HJS.ECU.Protocol.ProtocolBase.RebootMode)">
            <summary>Reboot ECU</summary>
            <param name="Mode">Mode of reboot</param>
            <returns>0 on success, else see Error</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.MasterReset">
            <summary>Reset all empirical values and erase all flash ring memory</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.EraseParamBlocks">
            <summary>Erase blocks in ECU flash for parameters</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.WriteParamBlock(HJS.Block@)">
            <summary>Write parameter block to ECU</summary>
            <param name="ParameterBlock">Reference of parameter block</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadParamBlock(HJS.Block.BlockId,HJS.Block@)">
            <summary>Read parameter block from ecu</summary>
            <param name="Identifier">Block identifier</param>
            <param name="ParameterBlock">Referece of block to read to</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.IsAlive">
            <summary>Check if connection is established</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.WriteOldConfig(System.Byte[])">
            <summary>Write configuration in old mode (erase and write for HW 1.34)</summary>
            <param name="Data">Source byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.WriteOldDatamap(System.Byte[])">
            <summary>Write datamap in old mode (erase and write for HW 1.34)</summary>
            <param name="Data">Source byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.WriteOldLanguage(System.Int32,System.Byte[])">
            <summary>Write one language in old mode (erase and write for HW 1.34)</summary>
            <param name="Position">Position of language in ecu</param>
            <param name="Data">Source byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.WriteProductionData(System.Byte[]@)">
            <summary>Write production data (SN, date, temperature)</summary>
            <param name="Data">Byte array of production data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetEcuTemperatureOffset">
            <summary>Get temperature offset from production data block</summary>
            <returns>Current temperature offset</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadReportBlock(HJS.Block@)">
            <summary>Read report block from ecu</summary>
            <param name="Report">Reference to target block</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.DateOfProgramming">
            <summary>Accessors for date of ECU programming (production date)
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.DateOfConnection">
            <summary>Accessors for date of connection to ECU (Time of reading digital info block)
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.SerialNumber">
            <summary>Accessors for ECU serial number
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.HardwareVersion">
            <summary>Accessors for ECU hardware version
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.SoftwareVersion">
            <summary>Accessors for ECU software version
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.IsUpdateableTo(System.String)">
            <summary>Check if current software version is updateable
            If PSoC version 8 is on ECU, the ECU can be updated</summary>
            <param name="Version">Version string to be updated to</param>
            <returns>True if software is updatebale</returns>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.ConfigurationVersion">
            <summary>Accessors for version of ECU configuration
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.DatamapVersion">
            <summary>Accessors for version of ECU data map
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.EcuTemperatureOffset">
            <summary>Accessors for ECU temperature offset
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.CompatibleRevision">
            <summary>Accessors for compatible software version
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.AcquisitionSaveMask">
            <summary>Accessors for bit mask of acquisition saves
            Read only</summary>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.AcquisitionSectors">
            <summary>Accessors for acquisition ring flash sectors 
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.AcquisitionSource(System.Byte)">
            <summary>Get measurement value identifier of acquisition source</summary>
            <param name="Position">Position of value in acquisition array</param>
            <returns>Value identifier, or 255 on error</returns>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.ErrorRingSectors">
            <summary>Accessors for number of error ring flash sectors
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ErrorRingFigure(System.Byte,System.Byte)">
            <summary>Get measurement value identifier of error ring environmental figures</summary>
            <param name="ErrorNumber">Appropriate error number (0 .. 63)</param>
            <param name="ValuePosition">Position of value (0 .. 2)</param>
            <returns>Value identifier, or 255 on error</returns>
        </member>
        <member name="P:HJS.ECU.Protocol.ProtocolBase.EmpiricalVersion">
            <summary>Accessors for version of empirical values
            Read only</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetDateTimeFromMinute(System.UInt32)">
            <summary>Convert minute after programming to date (in UTC w/o DST)</summary>
            <param name="MinuteAfterProgDate">Minute since programming</param>
            <returns>Date</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadInfoText(System.String@)">
            <summary>Read info text from ECU</summary>
            <param name="info">Output of info text</param>
            <returns></returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValuePosition(System.Byte)">
            <summary>Get position of value in communication table by identifier</summary>
            <param name="ValueId">Identifier of value</param>
            <returns>Position in table, or 255 if not found</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueNumber">
            <summary>Get number of actual values</summary>
            <returns>Number of actual values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.CheckLanguageChecksum(HJS.Block.BlockId,System.UInt16)">
            <summary>Check checksum of language block</summary>
            <param name="Language">Language identifier</param>
            <param name="Checksum">Checksum</param>
            <returns>True if checksum matches</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueName(System.Byte)">
            <summary>Get Name of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <returns>Name of value (empty string, if not found)</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueString(System.Byte,System.UInt16)">
            <summary>Get string of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <param name="uiValue">Value as unsigned 16 bit number</param>
            <returns>String of value (empty string, if not found)</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueUnit(System.Byte)">
            <summary>Get unit name of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <returns>Unit name of value (empty string, if not found)</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueAltUnit(System.Byte)">
            <summary>Get alternative unit name of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <returns>Alternative unit name of value (empty string, if not found)</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.SetValueAltUnitFlag(System.Boolean)">
            <summary>Set altenative unit flag</summary>
            <param name="NoAltUnit">True to use original unit, false for alternative unit (if available)</param>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueHiddenFlag(System.Byte)">
            <summary>Get hidden flag of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <returns>True if value is hidden</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetValueDisplayFlag(System.Byte)">
            <summary>Get display flag of value by position in communication table</summary>
            <param name="ValuePosition">Position in table</param>
            <returns>True if value is displayed</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetLanguageBlockId(HJS.ECU.Protocol.ProtocolBase.LanguageId)">
            <summary>Get block identifier of matching language identifier</summary>
            <param name="lId">Language identifier</param>
            <returns>Blockidentifier matching to language identifier</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadAcquisitionData(System.UInt16,System.Byte[]@)">
            <summary>Read one flash block (32kByte) of acquisition raw data</summary>
            <param name="Position">Position of acquisition data in ring</param>
            <param name="Data">Target byte array for flash data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadActualValues(System.Byte[]@)">
            <summary>Read actual values data</summary>
            <param name="Data">Target byte array of actual value data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadErrorStack(System.Byte[]@)">
            <summary>Read actual error stack data</summary>
            <param name="Data">Target byte array of error stack data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetErrorName(System.UInt16)">
            <summary>Get name of error by position</summary>
            <param name="Position">Position of error (same as ID)</param>
            <returns>String of error name</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.IsEventOrError(System.UInt16)">
            <summary>Get flag if error is only an event</summary>
            <param name="Position">Position in error table</param>
            <returns>True if event only</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ResetErrorStack">
            <summary>Reset actual error stack</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetBehaveName(System.Byte)">
            <summary>Get name of behave</summary>
            <param name="Position">Position of behave</param>
            <returns>String of behave name</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadErrorRing(System.Byte,System.Byte[]@)">
            <summary>Read error history ring data unit</summary>
            <param name="Position">Position of data unit in ring</param>
            <param name="Data">Target byte array of error ring data</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadRtc">
            <summary>Read rtc data</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetNumberOfVolatiles">
            <summary>Get number of volatiles values</summary>
            <returns>Number of volatiles values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetVolatileValue(System.UInt16)">
            <summary>Get volatile value as string</summary>
            <param name="Position">Position of volatile value</param>
            <returns>Volatile value as string</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadEmpiricals">
            <summary>Read empirical data</summary>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetEmpiricalGroupNames(System.String[]@)">
            <summary>Get empirical group names</summary>
            <param name="GroupNames">Position of group</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetNumberOfEmpiricalValues(HJS.ECU.EmpiricalDataBlock.GroupName)">
            <summary>Get number of empirical values</summary>
            <param name="Group">Enumeration of group</param>
            <returns>Number of values</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetEmpiricalValue(System.UInt16,System.UInt16)">
            <summary>Get empirical value string</summary>
            <param name="GroupPosition">Position of group</param>
            <param name="ValuePosition">Position of value</param>
            <returns>String with name and value</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadDtc(System.Byte[]@)">
            <summary>Read DTC data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadDtcTable(System.Byte[]@)">
            <summary>Read DTC assignement table</summary>
            <param name="target">Output byte array</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.SendOrder(HJS.ECU.Port.Comm.OrderByte,System.UInt16)">
            <summary>Send order to ecu</summary>
            <param name="Order">Enumeration of order</param>
            <param name="Value">Value of order</param>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadUpdatables(System.Byte[]@)">
            <summary>Read updatable empirical data</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.SetUpdatable(System.UInt16,System.Byte[])">
            <summary>Set updatable empirical value</summary>
            <param name="Position">Position of updatable empirical value</param>
            <param name="Data">Source byte array. Size MUST be 4 bytes</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetEmpiricalDataBlock">
            <summary>Get block of empirical data</summary>
            <returns>Block of empirical data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.GetVolatileValueBlock">
            <summary>Get block of volatile data</summary>
            <returns>Block of volatile data</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.ReadLanguageMask(System.Byte[]@)">
            <summary>Read language mask</summary>
            <param name="target">Output byte array</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.ProtocolBase.IsTaskActive(System.Byte)">
            <summary>Check if task is active</summary>
            <param name="taskIdentifier">Identifier of task</param>
            <returns>0 on sucess, else see ReturnValue</returns>
        </member>
        <member name="T:HJS.ECU.Protocol.TesterProtocol">
            <summary>Protocol for ECU Tester</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.mPort">
            <summary>Communication object for Serial access to Tester</summary>
        </member>
        <member name="T:HJS.ECU.Protocol.TesterProtocol.OutputValue">
            <summary>Enumeration for output values of output command</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.KL15Off">
            <summary>Ignition off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.KL15On">
            <summary>Ignition on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.KL30Off">
            <summary>Battery voltage off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.KL30On">
            <summary>Battery voltage on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.LedRed">
            <summary>Red Lamp on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.LedGreen">
            <summary>Green lamp on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.LedAllOff">
            <summary>All lamps off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.EcuHoldOff">
            <summary>Device lock off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.EcuHoldOn">
            <summary>Device lock on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.LedRedOff">
            <summary>Red lamp off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.OutputValue.LedGreenOff">
            <summary>Green lamp off</summary>
        </member>
        <member name="T:HJS.ECU.Protocol.TesterProtocol.LampMode">
            <summary>Enumeration for different modes of red, yellow and green lamp</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.LampMode.AllOff">
            <summary>Lamps all off</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.LampMode.AllOn">
            <summary>Lamps all on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.LampMode.YellowOnly">
            <summary>Lamp Yellow on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.LampMode.RedOnly">
            <summary>Lamp red on</summary>
        </member>
        <member name="F:HJS.ECU.Protocol.TesterProtocol.LampMode.GreenOnly">
            <summary>Lamp green on</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.#ctor(System.String,System.Byte[])">
            <summary>Overloaded constructor</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Dispose(System.Boolean)">
            <summary>Dispose of managed and native resouces</summary>
            <param name="disposing">True if managed members should be disposed</param>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Dispose">
            <summary>Dispose of instantiable members</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Connect">
            <summary>Connect to ECU</summary>
            <returns>0 on success, else see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Disconnect">
            <summary>Disconnect from ECU</summary>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.EjectEcu">
            <summary>Eject ECU</summary>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Lamps(HJS.ECU.Protocol.TesterProtocol.LampMode)">
            <summary>Turn on or off red, yellow and green lamp</summary>
            <param name="mode">Lamp mode</param>
            <returns>True on success</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.IsEcuDetected">
            <summary>Check if ECU is detected</summary>
            <returns>True if ECU is detected</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.LockTester(System.Boolean)">
            <summary>Lock or unlock tester</summary>
            <param name="locked">Flag if tester locked</param>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.SupplyOn">
            <summary>Turn on supply voltages</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.SupplyOff">
            <summary>Turn off supply voltages and wait for ECU to shut down</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.FlashModeOn">
            <summary>Turn on flash mode
            Tester delay time of tester (version 0.40.8) of 250ms + 250ms + 800ms + 250ms = 1550ms</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.FlashModeOff">
            <summary>Turn off flash mode
            Tester delay time of tester (version 0.40.8) of 250ms + 250ms = 550ms</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.GetVersion">
            <summary>Get version number of tester firmware</summary>
            <returns>Struct of firmware version</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.ResetTo12V">
            <summary>Reset Programmer I/O and set voltage to 12V</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Supply12V">
            <summary>Set battery voltage to 12 volt</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.Supply24V">
            <summary>Set battery voltage to 24 volt</summary>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.CanSendCyclic(System.Boolean)">
            <summary>Send cyclic UDA CAN messages</summary>
            <param name="cyclicEnable">Enable flag for sending</param>
            <returns>True if order was successfully</returns>
        </member>
        <member name="M:HJS.ECU.Protocol.TesterProtocol.ReadTemperature(System.Double@)">
            <summary>Read tester temperature</summary>
            <param name="Temperature">Tempearture of tester</param>
            <returns>True if reading was successfully</returns>
        </member>
        <member name="T:HJS.ECU.VolatileData">
            <summary>Volatile data object aka RTC data</summary>
        </member>
        <member name="F:HJS.ECU.VolatileData.mRawData">
            <summary>Byte buffer of complete data</summary>
        </member>
        <member name="F:HJS.ECU.VolatileData.Items">
            <summary>Items of volatile values</summary>
        </member>
        <member name="F:HJS.ECU.VolatileData.NumberOfValues">
            <summary>Number of values</summary>
        </member>
        <member name="F:HJS.ECU.VolatileData.mSoftwareRevision">
            <summary>Compatibility of volatile data</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.SoftwareRevision">
            <summary>Accessors of volatile data revision</summary>
        </member>
        <member name="M:HJS.ECU.VolatileData.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ECU.VolatileData.#ctor(System.Byte)">
            <summary>Overloaded constructor</summary>
            <param name="Revision">Compatible revision</param>
        </member>
        <member name="P:HJS.ECU.VolatileData.EcuTime">
            <summary>RTC time</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.RtcControl">
            <summary>RTC control</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.EcuStatus">
            <summary>ECU status</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.LastThermRegeneration">
            <summary>Last Regeneration of Filter (in running minutes)</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.FlashAqRingPos">
            <summary>Current position in step of acqui flash ring memory</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.FlashAqStepPos">
            <summary>Current step position of step in acqui flash ring memory</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.FlashErrRingSector">
            <summary>Current error ring sector</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.FlashErrRingAddress">
            <summary>Current error ring address</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.IstKonzentration">
            <summary>Current dosing concentration</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.Tankinhalt">
            <summary>Current fuel level</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.Dosierimpulse">
            <summary>Current total dosing pulses</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.PowerUpCounter">
            <summary>Power-up counter</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.BetriebsMinuten">
            <summary>Running minutes</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.DosierimpulseTank">
            <summary>Current dosing pulses taken from addititve tank</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.DosierimpulseFilter">
            <summary>Current dosing pulses dosed since change of filter</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.Beladungssumme">
            <summary>Sum of soot in filter</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.PressureOffset">
            <summary>Pressure offset</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.LastADOffset">
            <summary>Offset for load AD value</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.LoadNotCfgFlag">
            <summary>Load NotCfg flag</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.SpiFlashDebug">
            <summary>SPI-Flash debug counter</summary>
        </member>
        <member name="P:HJS.ECU.VolatileData.Checksum">
            <summary>Checksum</summary>
        </member>
        <member name="M:HJS.ECU.VolatileData.Read(System.Byte[]@)">
            <summary>Read volatile data from byte array</summary>
            <param name="SourceData">Reference to source byte array</param>
            <returns>0 on success, see ReturnValue</returns>
        </member>
        <member name="M:HJS.ECU.VolatileData.GetVolatileValue(System.UInt16)">
            <summary>Get volatile value as string</summary>
            <param name="Position">Position of volatile value</param>
            <returns>Volatile value as string</returns>
        </member>
        <member name="M:HJS.ECU.VolatileData.Parse">
            <summary>Parse byte array buffer to item list</summary>
        </member>
        <member name="M:HJS.ECU.VolatileData.ToBlock">
            <summary>Export raw data to block</summary>
            <returns>Block of raw data</returns>
        </member>
        <member name="T:HJS.ListViewNF">
            <summary>List view non flicker</summary>
        </member>
        <member name="M:HJS.ListViewNF.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ListViewNF.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Override of on notify event</summary>
            <param name="m">Message of event</param>
        </member>
        <member name="T:HJS.ReportBlock">
            <summary>Block of report of construction kit application</summary>
        </member>
        <member name="M:HJS.ReportBlock.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:HJS.ReportBlock.#ctor(HJS.Block)">
            <summary>Overloaded constructor</summary>
            <param name="b">Reference to author block in base class type</param>
        </member>
        <member name="M:HJS.ReportBlock.GetItemNumber">
            <summary>Get number of report items</summary>
            <returns>Number of report items</returns>
        </member>
        <member name="M:HJS.ReportBlock.GetItemName(System.Int32)">
            <summary>Get name of report item</summary>
            <param name="Position">Position of report item</param>
            <returns>Name of report item</returns>
        </member>
        <member name="M:HJS.ReportBlock.GetItemValue(System.Int32)">
            <summary>Get value of report item</summary>
            <param name="Position">Position of report item</param>
            <returns>Value of report item</returns>
        </member>
        <member name="T:HJS.ReturnValue">
            <summary>Enumeration for return values</summary>
        </member>
        <member name="F:HJS.ReturnValue.NoError">
            <summary>No Error occurred, communication successfully</summary>
        </member>
        <member name="F:HJS.ReturnValue.Retry">
            <summary>Communication failed, please retry</summary>
        </member>
        <member name="F:HJS.ReturnValue.PortNotOpened">
            <summary>Could not communicate, no port opened</summary>
        </member>
        <member name="F:HJS.ReturnValue.PortInUse">
            <summary>Port already in use</summary>
        </member>
        <member name="F:HJS.ReturnValue.TimeOut">
            <summary>Timeout / No answer</summary>
        </member>
        <member name="F:HJS.ReturnValue.VersionMismatch">
            <summary>Protocol version mismatch</summary>
        </member>
        <member name="F:HJS.ReturnValue.PasswordFailed">
            <summary>Password error</summary>
        </member>
        <member name="F:HJS.ReturnValue.ChecksumMismatch">
            <summary>Data checksum error</summary>
        </member>
        <member name="F:HJS.ReturnValue.LanguageNotValid">
            <summary>Could not read or parse language block</summary>
        </member>
        <member name="F:HJS.ReturnValue.SizeMismatch">
            <summary>Source and target size mismatch</summary>
        </member>
        <member name="F:HJS.ReturnValue.BlockNotFound">
            <summary>Block not found in memory or file</summary>
        </member>
        <member name="F:HJS.ReturnValue.BlockHeaderInvalid">
            <summary>Block header is invalid</summary>
        </member>
        <member name="F:HJS.ReturnValue.BlockAlreadyExists">
            <summary>Block already exists in file</summary>
        </member>
        <member name="F:HJS.ReturnValue.FileNotFound">
            <summary>File not found</summary>
        </member>
        <member name="F:HJS.ReturnValue.InvalidFile">
            <summary>Invalid file or file type</summary>
        </member>
        <member name="F:HJS.ReturnValue.FileEmpty">
            <summary>File is empty</summary>
        </member>
        <member name="F:HJS.ReturnValue.ThreadingBusy">
            <summary>Interface busy, another thread is using the interface</summary>
        </member>
        <member name="F:HJS.ReturnValue.ComOrderFailed">
            <summary>Could not execute ECU command</summary>
        </member>
        <member name="F:HJS.ReturnValue.FileReadError">
            <summary>File read error</summary>
        </member>
        <member name="F:HJS.ReturnValue.FileWriteError">
            <summary>File write error</summary>
        </member>
        <member name="F:HJS.ReturnValue.InvalidPort">
            <summary>Port does not exist, or has IO errors</summary>
        </member>
        <member name="F:HJS.ReturnValue.PortBusy">
            <summary>Port busy for an other command</summary>
        </member>
        <member name="F:HJS.ReturnValue.ComOrderModeFailed">
            <summary>Mode of ECU not matching STB</summary>
        </member>
    </members>
</doc>
